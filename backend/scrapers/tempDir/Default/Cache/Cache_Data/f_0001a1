{"version":3,"sources":["node_modules/browser-pack/_prelude.js","build/index.js","build/lib/TmPixel.js","build/lib/VendorService.js"],"names":[],"mappingspfile":"fanbuilder.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","/**\n * Created by brett.hale on 9/9/15.\n */\n//options:\n// dataLayer:reference to dataLayer defaults to digitalData\n// environment: akamai env to use [local,dev,qa,prod]\n// getVar: reference to getVar function\n// rules: array of rules to formulate the endpoint\n// [{testRegex:/regex/,testField:'pageName',urlTemplate:'<%baseUrl%>/<%environment%>/event/e_<%data.eventID%>'}]\nmodule.exports = require('./lib/VendorService');\n","//****** TM Pixel ******//\nmodule.exports = function (scope) {\n\n    var settings = scope.config.divolte;\n    var params = {};\n    var callbacks = [function () {\n        scope.log('Divolte Library Loaded')\n    }];\n\n    if (typeof settings.onLoad === 'function') {\n        callbacks.push(settings.onLoad);\n    }\n\n    var url = document.location.protocol + (settings.isStaging ? '//d.t-x.io/divolte.js' : '//d.t-x.io/divolte.js');\n\n    scope.log('Loading Divolte Library');\n\n    if (typeof window.requirejs !== 'undefined' && typeof window.require === 'function') {\n        window.require.config({shim:{divolte:{exports:'divolte'}},paths:{divolte: settings.url}});\n        scope.log('requirejs loading...', 'Divolte:');\n        window.require(['divolte'], function (d) {\n            window.divolte = d;\n            scope.log('requirejs finished loading.', 'Divolte:');\n            handleLibLoad(d);\n        });\n    } else {\n        loadScript();\n    }\n\n    function toArray (target) {\n\n        if (typeof target === 'object' && typeof target.push === 'function') {\n            return target;\n        } else if (typeof target === 'object') {\n            return [target];\n        }\n\n        if (typeof target === 'string') {\n            return target.split(',');\n        } else {\n            return [];\n        }\n\n    }\n\n    /**\n     * Send becomes TMPixel.push\n     * @param data\n     */\n    function send (data) {\n        scope.log('Sending called:' + data.event + ' -- ' + JSON.stringify(data.data), 'Divolte: ');\n        var divolte = window['divolte'] || window['module'] && window['module']['exports'];\n        if (divolte && divolte.signal) {\n            var topics = [];\n            if (settings.topics) topics = toArray(settings.topics);\n\n            if (data.data.topics) {\n                data.data.topics = toArray(data.data.topics).concat(topics);\n                data.data.topics = scope.uniq(data.data.topics);\n            } else {\n                data.data.topics = topics;\n            }\n\n            /**\n             * Include all params from page load call\n             */\n            if (data.sendAll) {\n                data.data = scope.merge(params, data.data);\n            }\n\n\n            scope.log('Sending with params:' + data.event + ' -- ' + JSON.stringify(data.data), 'Divolte: ');\n\n            if(settings.suppressCall) return;\n\n            divolte.signal(data.event, data.data);\n            scope.log('Sent Successfully', 'Divolte: ');\n\n        } else {\n            scope.log('ERROR: Divolte did not load', 'Divolte: ');\n        }\n\n    }\n\n    function clearQueue () {\n        scope.log('Clearing Queue {window.TmPixel}', 'Divolte: ');\n        var queue = window.TmPixel || [];\n        if (queue && queue.length>0) {\n            queue.forEach(function (item,index) {\n                send(item);\n            });\n        }\n\n        window.TmPixel = {push:send};\n    }\n\n    /**\n     * You should make all necessary change to overrides and settings before calling scope.\n     */\n    scope.trackPageView = function () {\n        settings = scope.config.divolte;\n        params = {};\n        buildData(params);\n        scope.log('TrackPageView - Merged Settings: ' + JSON.stringify(settings), 'Divolte: ');\n        send({event:'page_load', data:params});\n    };\n\n    function handleLibLoad () {\n        callbacks.forEach(function (onloadCallback) {\n            if (typeof onloadCallback === 'function') {\n\n                try {\n                    onloadCallback();\n                } catch (e) {\n                    scope.log('Callback Error ' + e.message, 'Divolte: ');\n                }\n            }\n        });\n\n        x = true;\n        if (settings.autoTrack === false) {\n            scope.log('Manual Tracking Required - Queue ignored', 'Divolte: ');\n            return;\n        }\n\n        if (typeof settings.autoTrack === 'undefined' || settings.autoTrack === true || settings.autoTrack === 'events') {\n            /**\n             * AutoTrack page view only when undefined (mimic default true behavior) or explicitly set to true\n             */\n            if (settings.autoTrack !== 'events') {\n                scope.log('AutoTrack Enabled - Sending Initial PageView', 'Divolte: ');\n                scope.trackPageView();\n            } else {\n                buildData(params);\n                scope.log('AutoTrack Events Only - No PageTrack Sent', 'Divolte: ');\n            }\n            /**\n             * All of these cases we want to clear the queue.\n             */\n            clearQueue();\n\n        } else if (settings.autoTrack === false) {\n\n            scope.trackEvent = send;\n\n        } else {\n            scope.log('Error configuring autoTrack setting, accptable values are [true, false, \\'events\\']');\n        }\n\n    }\n\n    function loadScript() {\n\n        scope.log('Loading Divolte Script', 'Divolte: ');\n        var x = false,\n            p, s = document.createElement('script');\n        s.type = 'text/javascript';\n        s.async = 1;\n        s.src = url;\n        s.onload = s.onreadystatechange = function () {\n            scope.log('Finished Loading Divolte Script', 'Divolte: ');\n            if (!x && (!this.readyState || this.readyState == 'complete')) {\n                handleLibLoad();\n            }\n        };\n        p = document.getElementsByTagName('script')[0];\n        p.parentNode.insertBefore(s, p);\n\n    }\n\n    function extractDomainName (pageName) {\n        return pageName.replace(/\\:.*$/g,'');\n    }\n\n    function collectData(map, params) {\n\n        var value = null;\n\n        if (map.data) {\n            // check if nested schema exists and collect data recursively\n            if (typeof map.data === 'object') {\n\n                var nestedParams = {};\n                map.data.forEach && map.data.forEach(function (item, ind) {\n\n                    collectData(item, nestedParams);\n\n                });\n\n                if (Object.keys(nestedParams).length > 1) {\n\n                    if (typeof map.transform === 'function') {\n                        nestedParams = map.transform(nestedParams);\n                    }\n\n                    params[map.key] = nestedParams;\n                }\n\n            } else {\n                value = scope.getValue(map.data, map.dataObj);\n                if (value !== undefined && value !== null && value !== '') {\n\n                    if (typeof map.transform === 'function') {\n                        value = map.transform(value);\n                    }\n\n                    if (value !== undefined && value !== null && value !== '') {\n                        params[map.key] = value;\n                    }\n                }\n            }\n        }\n\n    }\n\n    function unwrapQuery(value) {\n        return value.join(',');\n    }\n\n    /**\n     * @type {*[]}\n     * key: maps to divolte schema\n     * data: what to look for in digitalData or dataObj if provided\n     * dataObj: optional - if not digitalData where to look for the data needed\n     *\n     * todo: add type validation for divolte schema\n     */\n    scope.schema = [\n        {key:'browserId',data:'BID', dataObj: scope.cookies},\n        {key:'memberId',data:'MID', dataObj: scope.cookies},\n        {key:'marketId',data:'MARKET_ID', dataObj: scope.cookies},\n        {key:'sessionId',data:'SID', dataObj: scope.cookies},\n        {key:'sessionIdTM',data:'TMSID', dataObj: scope.cookies},\n        {key:'pageType',data:'page.pageInfo.pageType'},\n        {key:'pageName',data:'page.pageInfo.pageName'},\n        {key:'domain',data:'page.pageInfo.pageName', transform: extractDomainName},\n        {key:'eventId',data:'page.attributes.eventID'},\n        {key:'eventDate',data:'page.attributes.eventDate'},\n        {key:'majorCategoryId',data:'page.attributes.primaryCategoryID'},\n        {key:'minorCategoryId',data:'page.attributes.secondaryCategoryID'},\n        {key:'artistId',data:'page.attributes.artistID'},\n        {key:'orderTicketQuantity',data:'transaction.attributes.ticketQuantity'},\n        {key:'orderTotal',data:'transaction.total.transactionTotal'},\n        {key:'orderId',data:'transaction.transactionID'},\n        {key:'orderConfirmationCode',data:''},\n        {key:'orderFaceValueTotal',data:'transaction.total.basePrice'},\n        {key:'orderFeeTotal',data:'transaction.total.feesTotal'},\n        {key:'searchQuery',data:'page.pageInfo.onsiteSearchTerm'},\n        {key:'searchPageNumber',data:''},\n        {key:'tmLink',data:'tmLink',dataObj:scope.urlParams, transform: unwrapQuery},\n        {key:'majorCategoryId', data:'page.category.primaryCategoryID'},\n        {key:'minorCategoryId', data:'page.category.subCategory1ID'},\n        {key:'fanbuilder', transform: toArray, data: [\n            {key: 'userId', data: 'mc_eid', dataObj: scope.urlParams, transform: unwrapQuery},\n            {key: 'campaignId', data: 'mc_cid', dataObj: scope.urlParams, transform: unwrapQuery},\n            {key: 'provider', data: 'mc_cid', dataObj: scope.urlParams, transform: (function(value){return value[0] && 'MAILCHIMP' || null;})}\n        ]},\n        {key:'utm', transform: toArray, data: [\n            {key:'source', data: 'utm_source', dataObj: scope.urlParams, transform: unwrapQuery},\n            {key:'medium', data: 'utm_medium', dataObj: scope.urlParams, transform: unwrapQuery},\n            {key:'term', data: 'utm_term', dataObj: scope.urlParams, transform: unwrapQuery},\n            {key:'content', data: 'utm_content', dataObj: scope.urlParams, transform: unwrapQuery},\n            {key:'campaign', data: 'utm_campaign', dataObj: scope.urlParams, transform: unwrapQuery}\n        ]},\n        {key:'cfc', data:'cfc'}\n    ];\n\n    function buildData (params) {\n        scope.log('Building Data', 'Divolte: ');\n        if (settings.isStaging) {\n            params.isStagingEnvironment = true;\n        }\n\n        var schema = scope.schema;\n\n        /**\n         * This allows implementors to extend the schema without releasing fanbuilder.js\n         */\n        if(settings.additionalPageLoadParams){\n            schema = schema.concat(settings.additionalPageLoadParams);\n        }\n\n        for (var i = 0; i<schema.length; i++) {\n            collectData(schema[i], params);\n        }\n        scope.log('Params: ' + JSON.stringify(params), 'Divolte: ');\n\n\n    }\n\n};\n//****** End TM Pixel ******//\n","var TmPixel = require('./TmPixel');\n\nmodule.exports = VendorService;\n\nfunction VendorService(options, overrides) {\n    const htmlSingleQuote = '\\\\\\x27';\n    var self = this;\n\n    self.cookies   = self.readAllCookies();\n    self.urlParams = self.getUrlParams();\n    self.storeMap  = {\n        basePrice:        'transaction.total.basePrice',\n        transactionID:    'transaction.transactionID',\n        ticketQuantity:   'transaction.attributes.ticketQuantity',\n        orderID:          '',\n        confirmationID:   '',\n        orderDate:        '',\n        orderTime:        '',\n        ticketType:       'transaction.attributes.ticketType',\n        pageName:         'page.pageInfo.pageName',\n        promoterID:       'page.pageInfo.promoterID',\n        state:            'page.attributes.state',\n        zip:              'page.attributes.zip',\n        country:          'page.attributes.country',\n        value:            'transaction.profile.address.stateProvince',\n        billingZip:       'transaction.profile.address.postalCode',\n        billingState:     'transaction.profile.address.stateProvince',\n        billingCountry:   'transaction.profile.address.country',\n        dmaID:            '',\n        eventDate:        'page.attributes.eventDate',\n        eventTime:        'page.attributes.eventTime',\n        eventName:        'page.attributes.eventName',\n        eventID:          'page.attributes.eventID',\n        artistName:       'page.attributes.artistName',\n        artistID:         'page.attributes.artistID',\n        venueName:        'page.attributes.venueName',\n        venueID:          'page.attributes.venueID',\n        majorCatgoryID:   'page.category.primaryCategoryID',\n        majorCatgoryName: 'page.category.primaryCategory',\n        minorCatgoryID:   'page.category.subCategoryID',\n        minorCatgoryName: 'page.category.subCategory',\n        teamID:           'page.attributes.teamID',\n        currency:         'transaction.total.currency',\n        sessionID:        '',\n        cfc:              'cfc'\n    };\n\n    self.config         = options || {};\n    self.config.version = '2.0.25';\n    self.overrides      = overrides || {};\n\n    if ( self.config.dataLayerObject ) {\n        self.config.data = self.getValue(self.config.dataLayerObject, window);\n    }\n\n    if ( self.config.divolte && self.config.divolte.enabled ) {\n        self.tmPixel = new TmPixel(self);\n    }\n\n    self.trackPage = function (skipUpdate) {\n\n        if(!skipUpdate) {\n            if ( self.config.dataLayerObject ) {\n                self.config.data = self.getValue(self.config.dataLayerObject, window);\n            }\n        }\n\n        if ( self.config.data ) {\n\n            self.config.data.pageUrl = window.location.href;\n            self.config.data.pageReferrer = document.referrer;\n            self.config.data.random  = Math.random() * 100000000000000000;\n            self.config.data.pageTitle = window.document.title.replace(/\\x27/g, htmlSingleQuote) || '';\n\n            self.handlePixels(self.config.divolte && self.config.divolte.enabled && self.config.logPixels);\n        }\n    };\n\n    if ( self.config.autoFirePixels !== false ) {\n        self.trackPage(true);\n    }\n\n    return self;\n}\n\nVendorService.prototype.addGA2CustomDimensions = function (ga, trackerName, customVariables) {\n    var self = this;\n\n    if (typeof customVariables !== 'undefined') {\n        for (var key in customVariables) {\n            ga(trackerName + '.set', key, self.getValue(customVariables[key]));\n        }\n    }\n}\n\nVendorService.prototype.addSlashes = function(str)\n{\n    return (str + '').replace(/[\\\\\"']/g, '\\\\$&').replace(/\\u0000/g, '\\\\0');\n};\nVendorService.prototype.ajax = function(url){\n\n    var self = this;\n    var isMS8or9 = window.XDomainRequest && (window.navigator.userAgent.match(/Trident\\/5\\./) || window.navigator.userAgent.match(/Trident\\/4\\./));\n    var xmlhttp,requestThen,callbacks = [];\n\n    if(isMS8or9){\n        xmlhttp = new XDomainRequest();\n        xmlhttp.onsuccess = function(){\n            for(var i=0;i<callbacks.length;i++){\n                var fns = callbacks.shift();\n                if(typeof fns.success === 'function'){\n                    fns.success(JSON.parse(xmlhttp.responseText));\n                }\n            }\n        };\n        xmlhttp.onerror = function(){\n            for(var i=0;i<callbacks.length;i++){\n                var fns = callbacks.shift();\n                if(typeof fns.error === 'function'){\n                    fns.error(xmlhttp.responseText);\n                }\n            }\n        };\n        requestThen = function(success,error){\n            callbacks.push({success:success,error:error})\n        };\n    }else{\n        xmlhttp = new XMLHttpRequest();\n\n        xmlhttp.onreadystatechange = function () {\n            if (xmlhttp.readyState == (XMLHttpRequest.DONE || 4)) {\n                for(var i=0;i<callbacks.length;i++){\n                    var fns = callbacks.shift();\n                    if(xmlhttp.status == 200 && typeof fns.success === 'function' && xmlhttp.responseText.length > 0){\n                        fns.success(JSON.parse(xmlhttp.responseText));\n                    }else if(xmlhttp.status !== 200 && typeof fns.error === 'function'){\n                        fns.error(xmlhttp.responseText);\n                    }\n                }\n\n            }\n        };\n\n        requestThen = function(success,error){\n            if(xmlhttp.readyState == (XMLHttpRequest.DONE || 4)){\n                var callback = xmlhttp.status == 200 ? success : error;\n                if(typeof callback === 'function')callback(xmlhttp.responseText);\n            }else{\n                callbacks.push({success:success,error:error})\n            }\n        };\n    }\n\n    try{\n        xmlhttp.open(\"GET\", url, true);\n        xmlhttp.send();\n    }catch(e){\n            self.log('Pixel Service: Ajax Error for url: ' + url);\n    }\n\n\n    return {\n        then:requestThen\n    };\n\n};\nVendorService.prototype.clone = function(from, to)\n{\n    if (from == null || typeof from != \"object\") return from;\n    if (from.constructor != Object && from.constructor != Array) return from;\n    if (from.constructor == Date || from.constructor == RegExp || from.constructor == Function ||\n        from.constructor == String || from.constructor == Number || from.constructor == Boolean)\n        return new from.constructor(from);\n\n    to = to || new from.constructor();\n\n    for (var name in from)\n    {\n        to[name] = typeof to[name] == \"undefined\" ? this.clone(from[name], null) : to[name];\n    }\n\n    return to;\n};\nVendorService.prototype.createElem = function(type,url,id,cb) {\n    var elem = document.createElement(type);\n    elem.src = url;\n    elem.width = 1;\n    elem.height = 1;\n    elem.setAttribute('style','display:none');\n    if(typeof id === 'string')elem.id = id;\n    elem.setAttribute('frameborder',0);\n    if(typeof cb === 'function'){\n        elem.onload = cb;\n    }\n    document.body.appendChild(elem);\n\n};\nVendorService.prototype.createIframeWithContent = function(id, html, cb) {\n    var self = this;\n\n    var iframe           = document.createElement('iframe');\n    iframe.style.cssText = 'width:1px; height:1px; display:none;';\n    iframe.frameborder   = 0;\n    iframe.id            = id + \"\";\n    iframe.width         = 1;\n    iframe.height        = 1;\n\n    if(typeof cb === 'function'){\n        iframe.onload = cb;\n    }\n\n    document.body.appendChild(iframe);\n    var doc = ( iframe.contentWindow || iframe.contentDocument );\n    if ( doc.document ) {\n        doc = doc.document;\n    }\n    doc.open();\n    doc.write(html);\n    doc.close();\n\n};\n\n\n\nVendorService.prototype.embedInScriptTag = function(pixelCodes) {\n    var html = '<script>';\n    pixelCodes.forEach(function (pixelCode) {\n        html += !!pixelCode ? pixelCode : '';\n    })\n    html += '</script>';\n\n    return html;\n}\nVendorService.prototype.fetchPixels = function(callback){\n    var self = this;\n\n    var url = self.getPixelFileEndpoint();\n    if(self.config.baseUrl){\n        self.config.environment = self.config.environment || 'local/';\n        if(url) {\n            self.ajax('https://' + url)\n                .then(function(results){\n                callback(null, results);\n            },function(data){\n                    callback(data)\n                });\n        }\n    } else {\n        self.log('No baseUrl set in config to retrieve pixels');\n    }\n\n};\nvar ticketmasterAffiliation = 'Ticketmaster';\n\nVendorService.prototype.generateGA4HtmlScriptTag = function (tag) {\n  var self = this;\n\n  var eCommerceProducts;\n  var productData = self.getValue('productDataJson', self.config.data);\n  var productItems = [];\n  var trackingId = tag.trackingId.replace(/\\s/g, '');\n  var pageTitle = self.getValue('pageTitle', self.config.data);\n\n  try {\n    eCommerceProducts = JSON.parse(productData);\n  } catch (e) {\n    eCommerceProducts = [];\n  }\n\n  var html = generateOpeningHtmlPart(self, trackingId, pageTitle, tag.customVariables);\n\n  if (isAConversionPage(self, eCommerceProducts.length)) {\n    html += generateConversionPageHtmlContent(self, eCommerceProducts, productItems, tag.customVariables);\n  } else if (isAnEventDetailPage(eCommerceProducts.length)) {\n    html += generateEventDetailPageHtmlContent(self, eCommerceProducts, productItems, tag.customVariables);\n  }\n\n  html += generateClosingHtmlPart();\n  return html;\n}\n\nvar isAConversionPage = function (vendorService, eCommerceProductsSize) {\n  return vendorService.getValue('transaction.transactionID', vendorService.config.data) && eCommerceProductsSize;\n}\n\nvar isAnEventDetailPage = function (eCommerceProductsSize) {\n  return eCommerceProductsSize === 1;\n}\n\nvar getCustomDimensionValues = function (service, customDimensions) {\n  var customDimensionsValues = {};\n  for (var key in customDimensions) {\n    customDimensionsValues[key] = service.getValue(customDimensions[key]);\n  }\n  return customDimensionsValues;\n}\n\nvar getFormattedCustomDimensionsForHtml = function (service, customDimensions) {\n  var formattedCustomDimensions = '';\n  if (customDimensions && Object.keys(customDimensions).length > 0) {\n    formattedCustomDimensions += ',';\n    formattedCustomDimensions += JSON.stringify(getCustomDimensionValues(service, customDimensions))\n        .replace(/\"([^\"]+)\":/g, '$1:')\n        .replace(/[{}]/g, '')\n        .replace(/\"/g, \"'\");\n  }\n\n  return formattedCustomDimensions;\n}\n\nvar generateEventDetailPageHtmlContent = function (service, eCommerceProducts, productItems, customDimensions) {\n  var product = eCommerceProducts[0];\n  var category = product.category.split('/');\n  var primaryCategory = category[0] || '';\n  var subCategory = category.length > 1 ? category[1] : '';\n  var customDimensionValues = getCustomDimensionValues(service, customDimensions);\n  var productItem = Object.assign(customDimensionValues, {\n    affiliation: ticketmasterAffiliation,\n    item_id: product.id,\n    item_name: product.name,\n    item_brand: product.brand,\n    item_category: primaryCategory,\n    item_category2: subCategory\n  });\n\n  productItems.push(productItem);\n\n  var eventDetailPageHtml = 'tmGtag(\\'event\\', \\'view_item\\', {';\n  eventDetailPageHtml += 'send_to: t,';\n  eventDetailPageHtml += 'items: ' + JSON.stringify(productItems);\n  eventDetailPageHtml += getFormattedCustomDimensionsForHtml(service, customDimensions);\n  eventDetailPageHtml += '});';\n\n  return eventDetailPageHtml;\n}\n\nvar generateConversionPageHtmlContent = function (service, eCommerceProducts, productItems, customDimensions) {\n  eCommerceProducts.forEach(function (product) {\n    var category = product.category.split('/');\n    var primaryCategory = category[0] || '';\n    var subCategory = category.length > 1 ? category[1] : '';\n    var customDimensionsValues = getCustomDimensionValues(service, customDimensions);\n    var productItem = Object.assign(customDimensionsValues, {\n      affiliation: ticketmasterAffiliation,\n      item_id: product.id,\n      item_name: product.name,\n      item_brand: product.brand,\n      item_category: primaryCategory,\n      item_category2: subCategory,\n      item_variant: product.variant,\n      quantity: product.quantity,\n      price: product.price\n    });\n\n    productItems.push(productItem);\n  });\n\n  var conversionHtml = 'tmGtag(\\'event\\', \\'purchase\\', {';\n  conversionHtml += 'send_to: t,';\n  conversionHtml += 'currency: \\'' + service.getValue('transaction.total.currency', service.config.data) + '\\',';\n  conversionHtml += 'transaction_id: \\'' + service.getValue('transaction.transactionID', service.config.data) + '\\',';\n  conversionHtml += 'value: \\'' + service.getValue('transaction.total.basePrice', service.config.data) + '\\',';\n  conversionHtml += 'items: ' + JSON.stringify(productItems);\n  conversionHtml += getFormattedCustomDimensionsForHtml(service, customDimensions);\n  conversionHtml += '});';\n\n  return conversionHtml;\n}\n\nvar generateOpeningHtmlPart = function (service, trackingId, pageTitle, customDimensions) {\n  var openingHtml = '<script>var t = \\'' + trackingId + '\\', ';\n  openingHtml += 'gts = function (i,d){var e=d.createElement(\\'script\\'),m=d.getElementsByTagName(\\'script\\')[0];e.src=\\'https://www.googletagmanager.com/gtag/js?id=\\'+i+\\'&l=tmdl\\';m.parentNode.insertBefore(e,m)};';\n  openingHtml += 'gts(t,document);';\n  openingHtml += 'window.tmdl = window.tmdl || [];';\n  openingHtml += 'function tmGtag(){tmdl.push(arguments);}';\n  openingHtml += 'tmGtag(\\'js\\', new Date());';\n  // Enhanced measurement bug\n  openingHtml += 'tmGtag(\\'config\\', t, {send_page_view: false});';\n  // Bug:  Enhanced Measurement has an unpredictable delay for page_view when configured in GA4 client account (out of our control)\n  // It's waiting/looking for scrolls, etc. Here we trigger page_view manually to ensure it goes out before ga-disable is set\n  openingHtml += 'tmGtag(\\'event\\', \\'page_view\\', {send_to: t, page_title: \\'' + pageTitle + '\\'' + getFormattedCustomDimensionsForHtml(service, customDimensions) + '});';\n\n  return openingHtml;\n}\n\nvar generateClosingHtmlPart = function () {\n  return '</script>';\n}\n\nVendorService.prototype.generateTiktokHtmlScriptTag = function(tag) {\n    var self = this;\n    const pageType = getPageType(self);\n    if(pageType !== PageTypes.Unsupported)\n        return self.embedInScriptTag([generatePixelInstallationCode(tag.pixelId), generatePixelEventCode(self, tag, pageType)])\n    else\n        return null;\n}\n\nconst generatePixelInstallationCode = function(pixelId) {\n    var installationCode = '!(function (w, d, t) {';\n    installationCode += 'w.TiktokAnalyticsObject = t;';\n    installationCode += 'var ttq = (w[t] = w[t] || []);';\n    installationCode += '(ttq.methods = [';\n    installationCode += '\"page\",';\n    installationCode += '\"track\",';\n    installationCode += '\"identify\",';\n    installationCode += '\"instances\",';\n    installationCode += '\"debug\",';\n    installationCode += '\"on\",';\n    installationCode += '\"off\",';\n    installationCode += '\"once\",';\n    installationCode += '\"ready\",';\n    installationCode += '\"alias\",';\n    installationCode += '\"group\",';\n    installationCode += '\"enableCookie\",';\n    installationCode += '\"disableCookie\",';\n    installationCode += ']),';\n    installationCode += '(ttq.setAndDefer = function (t, e) {';\n    installationCode += 't[e] = function () {';\n    installationCode += 't.push([e].concat(Array.prototype.slice.call(arguments, 0)));';\n    installationCode += '};';\n    installationCode += '});';\n    installationCode += 'for (var i = 0; i < ttq.methods.length; i++)';\n    installationCode += 'ttq.setAndDefer(ttq, ttq.methods[i]);';\n    installationCode += '(ttq.instance = function (t) {';\n    installationCode += 'for (var e = ttq._i[t] || [], n = 0; n < ttq.methods.length; n++)';\n    installationCode += 'ttq.setAndDefer(e, ttq.methods[n]);';\n    installationCode += 'return e;';\n    installationCode += '}),';\n    installationCode += '(ttq.load = function (e, n) {';\n    installationCode += 'var i = \"https://analytics.tiktok.com/i18n/pixel/events.js\";';\n    installationCode += '(ttq._i = ttq._i || {}),';\n    installationCode += '(ttq._i[e] = []),';\n    installationCode += '(ttq._i[e]._u = i),';\n    installationCode += '(ttq._t = ttq._t || {}),';\n    installationCode += '(ttq._t[e] = +new Date()),';\n    installationCode += '(ttq._o = ttq._o || {}),';\n    installationCode += '(ttq._o[e] = n || {}),';\n    installationCode += '(ttq._partner = ttq._partner || \"Ticketmaster\");';\n    installationCode += 'var o = document.createElement(\"script\");';\n    installationCode += '(o.type = \"text/javascript\"),';\n    installationCode += '(o.async = !0),';\n    installationCode += '(o.src = i + \"?sdkid=\" + e + \"&lib=\" + t);';\n    installationCode += 'var a = document.getElementsByTagName(\"script\")[0];';\n    installationCode += 'a.parentNode.insertBefore(o, a);';\n    installationCode += '});';\n    installationCode += 'ttq.load(\"' + pixelId + '\");';\n    installationCode += 'ttq.page();';\n    installationCode += '})(window, document, \"ttq\");';\n\n    return installationCode;\n}\n\nconst generatePixelEventCode = function(vendorService, tag, pageType) {\n    var eventCode = 'setTimeout(function() {';\n    eventCode +=  'if( !window.ttq ){return;}';\n\n    eventCode += generatePageTypeHtmlPart(vendorService, tag.pixelId, pageType);\n\n    eventCode += '}, 500);';\n    return eventCode;\n}\n\nconst PageTypes = {\n    Venue: \"venue page\",\n    Artist: \"artist page\",\n    EventDetail: \"event detail page\",\n    Confirmation: \"confirmation page\",\n    Unsupported: \"\"\n};\n\nvar getPageType = function(vendorService) {\n    const venueId = vendorService.getValue('page.attributes.venueID', vendorService.config.data);\n    const artistId = vendorService.getValue('page.attributes.artistID', vendorService.config.data);\n    const eventId = vendorService.getValue('page.attributes.eventID', vendorService.config.data);\n    const orderId = vendorService.getValue('transaction.transactionID', vendorService.config.data);\n\n    if (!!venueId && !artistId && !eventId && !orderId)\n        return PageTypes.Venue;\n    else if (!!artistId && !venueId && !eventId && !orderId)\n        return PageTypes.Artist;\n    else if (!!eventId && !orderId)\n        return PageTypes.EventDetail;\n    else if (!!orderId)\n        return PageTypes.Confirmation;\n    else\n        return PageTypes.Unsupported;\n}\n\nvar generatePageTypeHtmlPart = function(vendorService, pixelId, pageType) {\n    switch(pageType) {\n        case PageTypes.Venue:\n            return generateVenuePageHtmlPart(vendorService, pixelId);\n        case PageTypes.Artist:\n            return generateArtistPageHtmlPart(vendorService, pixelId);\n        case PageTypes.EventDetail:\n            return generateEventDetailPageHtmlPart(vendorService, pixelId);\n        case PageTypes.Confirmation:\n            return generateConfirmationPageHtmlPart(vendorService, pixelId);\n    }\n}\n\nconst generateVenuePageHtmlPart = function(vendorService, pixelId) {\n    return 'ttq.instance(\\''+ pixelId +'\\').track(\\'ViewContent\\',{content_category:\\''+ vendorService.getValue('page.attributes.venueName') +'\\'});';\n}\n\nconst generateArtistPageHtmlPart = function(vendorService, pixelId) {\n    return 'ttq.instance(\\''+ pixelId +'\\').track(\\'ViewContent\\',{content_category:\\''+ vendorService.getValue('page.attributes.artistName') +'\\'});';\n}\n\nconst generateEventDetailPageHtmlPart = function(vendorService, pixelId) {\n    return 'ttq.instance(\\''+ pixelId +'\\').track(\\'ViewContent\\', {  content_category:\\''+ vendorService.getValue('page.attributes.artistName') +'\\',  content_name: \\''+ vendorService.getValue('page.attributes.eventName') +'\\',  content_id: \\''+ vendorService.getValue('page.attributes.eventID') +'\\',  content_type: \\'product\\' });';\n}\n\nconst generateConfirmationPageHtmlPart = function(vendorService, pixelId) {\n    var confirmationPageCode = 'ttq.instance(\\''+ pixelId +'\\').track(\\'CompletePayment\\', {';\n    confirmationPageCode += 'content_category:\\''+ vendorService.getValue('page.attributes.artistName') +'\\',';\n    confirmationPageCode += 'content_name: \\''+ vendorService.getValue('page.attributes.eventName') +'\\',';\n    confirmationPageCode += 'content_id: \\''+ vendorService.getValue('page.attributes.eventID') +'\\',';\n    confirmationPageCode += 'content_type: \\'product\\',';\n    confirmationPageCode += 'value:\\''+ vendorService.getValue('transaction.total.basePrice') +'\\',';\n    confirmationPageCode += 'currency:\\''+ vendorService.getValue('transaction.total.currency') +'\\',';\n    confirmationPageCode += 'quantity:\\''+ vendorService.getValue('transaction.attributes.ticketQuantity') +'\\'});';\n\n    return confirmationPageCode;\n}\n\n\nVendorService.prototype.readAllCookies = function() {\n    var pairs = document.cookie.split(\";\");\n    var cookies = {};\n    for (var i=0; i<pairs.length; i++){\n        var pair = pairs[i].split(\"=\");\n        cookies[pair[0].replace(/ /g,'')] = decodeURIComponent(pair[1]);\n    }\n    return cookies;\n};\nVendorService.prototype.getPixelFileEndpoint = function(){\n    var self = this;\n    var rules = self.config.rules;\n    var urlToBuild = '';\n\n    for(var i = 0; i < rules.length; i++){\n        var currentRule = rules[i];\n        if(!currentRule.testField || !currentRule.testRegex){\n            continue;\n        }\n        if(currentRule.testRegex.test(self.getValue(currentRule.testField,self.config)) && currentRule.urlTemplate){\n            var pieces = currentRule.urlTemplate.match(/<%([^%>]+)%>/g) || [];\n            urlToBuild = currentRule.urlTemplate+'';\n            for(var j = 0; j < pieces.length; j++){\n                //data.eventID or baseUrl\n                var value='',\n                store=self.config,\n                dataPoint = pieces[j].replace('<%','').replace('%>','');\n                if(/^config\\./.test(dataPoint)){\n                    dataPoint = dataPoint.replace(/^config\\./,'');\n                }else\n                if(/^data\\./.test(dataPoint)){\n                    dataPoint = dataPoint.replace(/^data\\./,'');\n                    store = self.config.data;\n                }else\n                if(/^currentRule\\./.test(dataPoint)){\n                    dataPoint = dataPoint.replace(/^currentRule\\./,'');\n                    store = currentRule;\n                }\n\n                value = self.getValue(dataPoint,store);\n                if(typeof value !== 'number' && typeof value !== 'string')value = '';\n\n                urlToBuild = urlToBuild.replace(pieces[j],value);\n\n            }\n            break;\n        }\n\n    }\n\n    return urlToBuild || false;\n\n};\nVendorService.prototype.getScript = function(url,id,appendTo,cb){\n    var self = this;\n    try{\n        newScript = document.createElement('script');\n        newScript.type = 'text/javascript';\n        newScript.src = url;\n        newScript.async = true;\n        if(typeof id === 'string')newScript.id = id;\n        if(typeof cb === 'function'){\n            newScript.onload = cb;\n        }\n        if(appendTo){\n            appendTo.appendChild(newScript);\n        }else{\n            document.getElementsByTagName('head')[0].appendChild(newScript);\n        }\n    }catch(e){\n        if(self.config.debug === true && typeof console !== 'undefined' && typeof tags[0] !== 'undefined'){\n            console.log('Pixel Service: Script Loading Failed:' + url);\n        }\n    }\n\n};\n\n\nVendorService.prototype.getUrlParams = function (location) {\n    location = location || document.location;\n    var qd = {};\n    location.search.substr(1).split(\"&\").forEach(function (item) {\n        var k = item.split(\"=\")[0]\n            , v = decodeURIComponent(item.split(\"=\")[1]);\n        (k in qd) ? qd[k].push(v) : qd[k] = [v];\n    });\n    return qd;\n};\nVendorService.prototype.getValue = function (path, obj) {\n    var self = this;\n    if (typeof self.overrides[path] !== 'undefined') {\n        self.log('Pixel Service: Override found for path: ' + path);\n        var override = self.overrides[path];\n        if (typeof override === 'function') {\n            return override();\n        } else {\n            //it's a constant\n            return self.overrides[path];\n        }\n    }\n\n    var toNumeric = ['ticketQuantity', 'basePrice', 'feesTotal', 'transactionTotal'];\n    obj = obj || self.config.data;\n    for (var i = 0, path = path.split('.'), len = path.length; i < len; i++) {\n        if (typeof obj[path[i]] !== 'undefined') {\n            if (typeof obj[path[i]] === 'function') {\n                obj = obj[path[i]]();\n            } else {\n                if (toNumeric.indexOf(path[i]) > -1 && !obj[path[i]]) {\n                    obj = 0;\n                } else {\n                    obj = obj[path[i]];\n                }\n            }\n        } else {\n            obj = \"\";\n            break;\n        }\n    }\n    return obj;\n};\n/**\n * Return current lib version\n */\nVendorService.prototype.log = function () {\n    var self = this;\n    return self.config.version;\n\n};\nVendorService.prototype.handleError = function(msg){\n    return function(data){\n        if(typeof console !== 'undefined'){\n            console.error('ERROR: %s', msg, data);\n        }\n    };\n};\nVendorService.prototype.handlePixels = function(logPixels)\n{\n    var self = this;\n    self.pixelProcessProgress = [];\n    self.fb3 = self.pixelProcessProgress;\n    self.fetchPixels(function (err, results) {\n\n        if(err) {\n            self.handleError('Failed to retrieve tags from CDN')(err);\n            self.pixelProcessProgress.push({summary: 'Failed to retrieve tags from CDN', msg:err});\n            return;\n        } else if (results && results.length && results.length > 0) {\n            self.pixelProcessProgress.push({summary: 'Fetched Pixels Successfully', msg: 'Found ' + results.length, page: self.getValue('page.pageInfo.pageName') });\n        } else {\n            self.log('No Tags to Process');\n            return;\n        }\n\n        self.processTags(results, function (err) {\n\n            if(err) {\n                self.handleError('Failed to process tags')(err);\n                self.pixelProcessProgress.push({summary: 'Failed to process tags', msg:err});\n                return;\n            } else {\n                self.pixelProcessProgress.push({summary: 'Sorted tags successfully', page: self.getValue('page.pageInfo.pageName')});\n            }\n\n            self.processPixels(false, function (err, status){\n\n                var data = {pixels: status};\n                if(err) {\n                    self.handleError('Failed to process pixels')(err);\n                    self.pixelProcessProgress.push({summary: 'Failed to process ALL pixels sucessfully', pixelsAttempted: results.length, pixelErrors: err.length , errors:err, page: self.getValue('page.pageInfo.pageName')});\n                    data.hasPixelErrors = true;\n                } else {\n                    self.pixelProcessProgress.push({summary: 'Processed Pixels Successfully', page: self.getValue('page.pageInfo.pageName')});\n                }\n\n                if (logPixels) {\n                    window.TmPixel = window.TmPixel || [];\n                    window.TmPixel.push({event: 'pixellogs', data: data, sendAll: true});\n                }\n\n            });\n        });\n    });\n};\n/**\n * Log to console\n * @param msg\n * @param prefix\n */\nVendorService.prototype.log = function (msg, prefix) {\n    var self = this;\n    prefix = prefix || 'Pixel Service: ';\n    if (self.config.debug === true && typeof console !== 'undefined') {\n        console.log(prefix + msg);\n    }\n};\n/**\n * Merge\n * @param defMap -- source obj\n * @param overrides -- target obj, values will override the source obj.\n * @returns {{}}\n */\nVendorService.prototype.merge = function(defMap, overrides){\n    var keys = Object.keys(defMap).concat(Object.keys(overrides)),\n        copy = {};\n    keys.forEach(function (key, index) {\n        var primary = overrides[key], secondary = defMap[key];\n        if (primary !== undefined && primary !== null && primary !== '') {\n            copy[key] = primary;\n        } else if (secondary !== undefined && secondary !== null && secondary !== '') {\n            copy[key] = secondary;\n        }\n\n    });\n    return copy;\n};\nVendorService.prototype.processPixels = function(sendToDivolte, callback){\n    var self = this;\n    var status = [];\n    var hasErrors = [];\n    for(var i = 0,keys=Object.keys(self.sortedTags);i<keys.length;i++){\n        var service = keys[i];\n        self.log('Trying to find method: ' + service);\n\n        if(typeof self[service] === 'function'){\n            var tags = self.sortedTags[service];\n            for ( var j = 0; j < tags.length; j++ ) {\n                var record = { id: tags[j].id, type: tags[j].type, endDate: tags[j].endDate, beginDate: tags[j].beginDate, domains: tags[j].domains};\n                try {\n                    self[service](tags[j], j);\n                } catch ( e ) {\n                    record.error = e.message;\n                    hasErrors.push({error: e.message, pixel: record });\n                    self.log('Failed to run method for service/pixelId: ' + service + '/' + tags[j].id);\n                }\n                status.push(record);\n            }\n        }\n    }\n\n    self.pixelHistory = self.pixelHistory || [];\n    self.pixelHistory = self.pixelHistory.concat(status);\n    callback(hasErrors.length>0 ? hasErrors : null, status);\n\n};\nVendorService.prototype.processTags = function (results, callback) {\n    var self     = this;\n\n    var sortedTags     = {};\n    var now            = new Date().getTime(),\n        domain         = self.getValue('page.pageInfo.domain', self.config.data),\n        isConfirmation = /Checkout: Confirmation/.test(self.getValue('page.pageInfo.pageName')),\n        pageSubtype    = self.getValue('transaction.attributes.inventoryType') || 'primary';\n\n    for ( var i = 0; i < results.length; i++ ) {\n\n        if ( typeof results[i].types === 'undefined' ) {  //if there are no types, we can assume it's TM\n\n            var defaultCaseDomains = false;\n            if ( typeof results[i].domains === 'undefined' || results[i].domains.length < 1 ) {\n                results[i].domains = [];\n                if ( ['US_DESKTOP', 'CA_DESKTOP', 'US_MOBILE', 'CA_MOBILE'].indexOf(domain) !== -1 ) {\n                    defaultCaseDomains = true;\n                }\n            }\n\n            var fireBasedOnPageSubtype = true; //by default, we don't worry about primary/resale subtypes\n            if ( isConfirmation ) {\n                //no subtypes: this is an older pixel from before subtypes were supported, so just fire away\n                if ( typeof results[i].pageSubtypes === 'undefined' || results[i].pageSubtypes.length < 1 ) {\n                    fireBasedOnPageSubtype = true;\n                }\n                //subtypes exist: in this case, if the page subtype of the current confirmation page is not in the list, don't fire the pixel\n                else if ( results[i].pageSubtypes.indexOf(pageSubtype.toUpperCase()) === -1 ) {\n                    fireBasedOnPageSubtype = false;\n                }\n            }\n\n            //when to fire a pixel\n            if ( results[i].enabled !== false && \t\t\t\t\t\t\t\t\t\t//pixel is enabled\n                 (results[i].endDate == null || now < results[i].endDate) && \t\t\t\t\t\t\t\t\t\t//now is between the begin and end dates\n                 now > results[i].beginDate &&\n                 (results[i].domains.indexOf(domain) > -1 || defaultCaseDomains) && \t//you are on the correct domain\n                 (fireBasedOnPageSubtype)\t\t\t\t\t\t\t\t\t\t\t// the primary/resale targeting matches correctly (logic for this is above)\n            ) {\n                var key = self.toCamelCase(results[i].slug);\n                if ( typeof sortedTags[key] === 'undefined' ) {\n                    sortedTags[key] = [];\n                }\n                sortedTags[key].push(results[i]);\n            }\n        }\n\n        //case of account manager\n        else if ( typeof results[i].types !== 'undefined' ) {\n            var correctPage = false;\n            var pageName    = domain = self.getValue('page.pageInfo.pageName', self.config.data);\n            var pageType = null;\n\n            if (!(/: Checkout$/.test(pageName) || /: Billing$/.test(pageName))) {\n                if (/^((?!(Buy|Confirmation)).)*$/.test(pageName)) {\n                    pageType = 'LANDING';\n                }\n                if (/^((?!Confirmation).)*Buy((?!Confirmation).)*$/.test(pageName)) {\n                    pageType = 'PURCHASING';\n                }\n                if (/Buy: Confirmation/.test(pageName)) {\n                    pageType = 'CONFIRMATION';\n                }\n            }\n\n            if ( results[i].types.indexOf(pageType) !== -1 ) {\n                correctPage = true;\n            }\n\n            if ( results[i].enabled !== false && (results[i].endDate == null || now < results[i].endDate) && now > results[i].beginDate && correctPage ) {\n                var key = self.toCamelCase(results[i].slug);\n                if ( typeof sortedTags[key] === 'undefined' ) {\n                    sortedTags[key] = [];\n                }\n                sortedTags[key].push(results[i]);\n            }\n        }\n    }\n\n    self.sortedTags = sortedTags;\n    callback();\n\n};\nVendorService.prototype.setValue = function(path,value,obj){\n    obj = obj || {};\n    path=path.split('.');\n    for (var i=0, len=path.length; i<len; i++){\n        obj[path[i]] = obj[path[i]] || {};\n        if(i===len-1){\n            obj[path[i]] = value;\n            break;\n        }else{\n            obj = obj[path[i]];\n        }\n\n    }\n\n    return obj;\n};\nVendorService.prototype.toCamelCase = function(myString){\n    return myString.replace(/-([a-z])/g, function (g) { return g[1].toUpperCase(); });\n};\nVendorService.prototype.toFloat = function(num, numDefault){\n    var parsedBase = parseFloat(num);\n    if(!isNaN(parsedBase) && typeof parsedBase === 'number') {\n        return parsedBase.toFixed(2);\n    } else {\n        return numDefault || 0.00;\n    }\n};\n/**\n * Uniq\n * @param array to uniq\n * @returns uniq array\n */\nVendorService.prototype.uniq = function(array){\n    return array.filter(\n        function (a) { return !this[a] ? this[a] = true : false; }, {}\n    );\n};\n\nVendorService.prototype.adroll = function(i, index){\n    var self = this;\n\n        var iframe = document.createElement('iframe');\n        iframe.style.cssText = 'width:1px; height:1px; display:none;';\n        iframe.frameborder = 0;\n        var html = '<script type=\"text/javascript\">';\n        html += 'adroll_adv_id=\"' + i.advertisableId;\n        html += '\";adroll_pix_id=\"' + i.adrollPixelId;\n        html += '\";(function () {';\n        html += 'var oldonload = window.onload;';\n        html += 'window.onload = function () {';\n        html += '__adroll_loaded = true;';\n        html += 'var scr = document.createElement(\"script\");';\n        html += 'var host = ((\"https:\" == document.location.protocol) ? \"https://s.adroll.com\" : \"http://a.adroll.com\");';\n        html += 'scr.setAttribute(\\'async\\', \\'true\\');';\n        html += 'scr.type = \"text/javascript\";';\n        html += 'scr.src = host + \"/j/roundtrip.js\";';\n        html += '((document.getElementsByTagName(\\'head\\') || [null])[0] || document.getElementsByTagName(\\'script\\')[0].parentNode).appendChild(scr);';\n        html += 'if (oldonload) {oldonload()}';\n        html +=  '};}());</script>';\n\n        if(i.segmentName){\n            html += '<script type=\"text/javascript\">';\n            html += 'adroll_segments = \"' + i.segmentName +'\"';\n            html += ';</script>';\n        }\n\n        if (self.getValue('transaction.transactionID',self.config.data)) {\n            html += '<script type=\"text/javascript\">';\n            html += 'adroll_conversion_value =' + self.getValue('transaction.total.basePrice',self.config.data);\n            html += ';adroll_currency = \"' + (self.getValue('transaction.total.currency') || 'USD');\n            html += '\";</script>';\n        }\n\n        if (i.customVariables) {\n            var cust = {};\n            var u = i.customVariables;\n            for (var i in u) {\n                if (u.hasOwnProperty(i)) {\n                    cust[i] = self.getValue(u[i],self.config.data);\n                }\n            }\n\n            html += '<script type=\"text/javascript\">';\n            html += 'adroll_custom_data = ';\n            html += JSON.stringify(cust);\n            html += '</script>';\n\n        }\n\n        document.body.appendChild(iframe);\n        var doc = (iframe.contentWindow || iframe.contentDocument);\n\t\tif (doc.document)doc = doc.document;\n    \tdoc.open();\n        doc.write(html);\n        doc.close();\n\n\n};\n\nVendorService.prototype.bingV2 = function (tag, index) {\n    var self = this;\n\n        var iframe = document.createElement('iframe');\n        iframe.style.cssText = 'width:1px; height:1px; display:none;';\n        iframe.frameborder = 0;\n        iframe.id = tag.id;\n        var html = '<script type=\"text/javascript\">';\n         html += '(function(w,d,t,r,u){var f,n,i;w[u]=w[u]||[] ,f=function(){var o={ti:\"' + tag.tagId + '\"}; o.q=w[u],w[u]=new UET(o),w[u].push(\"pageLoad\")} ,n=d.createElement(t),n.src=r,n.async=1,n.onload=n .onreadystatechange=function() {var s=this.readyState;s &&s!==\"loaded\"&& s!==\"complete\"||(f(),n.onload=n. onreadystatechange=null)},i= d.getElementsByTagName(t)[0],i. parentNode.insertBefore(n,i)})(window,document,\"script\",\" //bat.bing.com/bat.js\",\"uetq\"); ';\n        html += 'window.uetq = window.uetq || [];';\n\n        if (self.getValue('transaction.transactionID',self.config.data)) {\n            html += 'window.uetq.push(\"event\", \"\", {\"revenue_value\": ' + self.getValue('transaction.total.basePrice') + ', \"currency\": \"' + self.getValue('transaction.total.currency') + '\"}); ';\n        }\n\n        html +=  '</script>';\n\n        document.body.appendChild(iframe);\n        var doc = (iframe.contentWindow || iframe.contentDocument);\n\t\tif (doc.document)doc = doc.document;\n    \tdoc.open();\n        doc.write(html);\n        doc.close();\n};\n\nVendorService.prototype.bing = function (tag, index) {\n    var self = this;\n\n            var tagId = tag.tagId;\n\n            (function (w, d, t, r, u) {\n                var f, n, i;\n                w[u] = w[u] || [], f = function () {\n                    var o = {ti: tagId};\n                    o.q = w[u], w[u] = new UET(o), w[u].push(\"pageLoad\")\n                }, n = d.createElement(t), n.src = r, n.async = 1, n.onload =\n                    n.onreadystatechange = function () {\n                        var s = this.readyState;\n                        s && s !== \"loaded\" && s !== \"complete\" || (f(), n.onload =\n                            n.onreadystatechange = null)\n                    }\n                    , i = d.getElementsByTagName(t)[0], i.parentNode.insertBefore(n, i)\n            })(window, document, \"script\", \"//bat.bing.com/bat.js\", \"uetq\");\n\n};\nVendorService.prototype.centro = function(tag, index) {\n\tvar self = this;\n\n    var src = self.getValue('transaction.transactionID') ? '//clickserv.pixel.ad/conv/' + tag.conversionId + '/' + self.getValue('transaction.total.basePrice')\n        : ('//centro.pixel.ad/iap/' + tag.conversionId);\n    self.createElem('img', src, tag.id);\n};\n\nVendorService.prototype.htmlSnippet = function (tag, index) {\n    var self = this;\n\n    var variableMap = {\n        '$artist_id$':         self.getValue('page.attributes.artistID'),\n        '$artist_name$':       self.getValue('page.attributes.artistName'),\n        '$brand$':             self.getValue('brand'),\n        '$cfc$':               self.getValue('cfc'),\n        '$client_id$':         self.getValue('page.attributes.clientID'),\n        '$document_referrer$': document.referrer,\n        '$document_href$':     document.location.href,\n        '$event_date$':        self.getValue('page.attributes.eventDate'),\n        '$event_id$':          self.getValue('page.attributes.eventID'),\n        '$event_name$':        self.getValue('page.attributes.eventName').replace(/\\x27/g, '\\\\\\x27'),\n        '$event_time$':        self.getValue('page.attributes.eventTime'),\n        '$language$':          self.getValue('page.pageInfo.language'),\n        '$inventory_type$':    ( parseInt(self.getValue('transaction.attributes.isResale') + 0) !== 0 ) ? 'resale' : 'primary',\n        '$major_category$':    self.getValue('page.category.primaryCategory'),\n        '$major_category_id$': self.getValue('page.category.primaryCategoryID'),\n        '$minor_category$':    self.getValue('page.category.subCategory1'),\n        '$minor_category_id$': self.getValue('page.category.subCategory1ID'),\n        '$mlb_product_string$':self.getValue('mlbProductString'),\n        '$face_value$':        self.getValue('transaction.total.basePrice'),\n        '$order_fees$':        self.getValue('transaction.total.feesTotal'),\n        '$order_id$':          self.getValue('transaction.transactionID'),\n        '$order_state$':       self.getValue('transaction.profile.address.stateProvince'),\n        '$order_country$':     self.getValue('transaction.profile.address.country'),\n        '$ticket_quantity$':   self.getValue('transaction.attributes.ticketQuantity'),\n        '$order_currency$':    self.getValue('transaction.total.currency'),\n        '$order_date$':        self.getValue('transaction.attributes.orderDate'),\n        '$order_time$':        self.getValue('transaction.attributes.orderTime'),\n        '$order_zip$':         self.getValue('transaction.profile.address.postalCode'),\n        '$page_name$':         self.getValue('page.pageInfo.pageName'),\n        '$random$':            Math.random() * 1000000000,\n        '$transaction_total$': self.getValue('transaction.total.transactionTotal'),\n        '$venue_country$':     self.getValue('page.attributes.country'),\n        '$venue_id$':          self.getValue('page.attributes.venueID'),\n        '$venue_name$':        self.getValue('page.attributes.venueName').replace(/\\x27/g, '\\\\\\x27'),\n        '$venue_zip$':         self.getValue('page.attributes.zip'),\n        '$event_time_zone$':   '',\n        '$product_data_json$': self.getValue('productDataJson')\n    };\n\n    var refScript = '<head><script>' +\n                    'Object.defineProperty(document, \"referrer\", { ' +\n                    'get : function() { ' +\n                    'return \\'' + document.referrer + '\\'; ' +\n                    '}' +\n                    '});' +\n                    '</script></head><body>${tag.html}</body>';\n\n    function escapeRegExp(str) {\n        return str.replace(/[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|\\']/g, '\\\\$&');\n    }\n\n    function cleanupString(str) {\n        if(str.replace) {\n            return str.replace(/[\\[\\]\\$\\']/g, '');\n        } else {\n            return str;\n        }\n    };\n\n    //replace all of the $...$ html strings with their actual values\n    var variablesToReplace = Object.keys(variableMap);\n    variablesToReplace.forEach(function (variableName, index) {\n        tag.html = tag.html.replace(new RegExp(escapeRegExp(variableName), 'gi'), typeof variableMap[variableName] !== 'undefined' ? cleanupString(variableMap[variableName]) : '');\n    });\n\n    var iframe           = document.createElement('iframe');\n    iframe.id            = tag.id;\n    iframe.style.cssText = 'width:1px; height:1px; display:none;';\n    iframe.frameborder   = 0;\n    document.body.appendChild(iframe);\n    var doc = (iframe.contentWindow || iframe.contentDocument);\n    if ( doc.document ) {\n        doc = doc.document;\n    }\n    doc.open();\n    doc.write(refScript.replace('${tag.html}', tag.html));\n    doc.close();\n\n};\n\nVendorService.prototype.custom = function(tag, index) {\n\tvar self = this;\n\n\tvar src;\n\t\tif(tag.url.indexOf('http:') === -1) {\n\t\t\tsrc = tag.url;\n\t\t\tif ( typeof tag.customVariables !== 'undefined' ) {\n\t\t\t\tif ( src.indexOf('?') > -1 )\n\t\t\t\t\tsrc += '&';\n\t\t\t\telse\n\t\t\t\t\tsrc += '?';\n\t\t\t\tvar u = tag.customVariables;\n\t\t\t\tfor ( var j in u ) {\n\t\t\t\t\tif ( u.hasOwnProperty(j) ) {\n\t\t\t\t\t\tsrc += j + '=' + encodeURIComponent(self.getValue(u[ j ], self.config.data)) + '&';\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t//trim off the trailing ? or &\n\t\t\t\tsrc = src.substring(0, src.length - 1);\n\t\t\t}\n\n\t\t\tif ( tag.tagType !== 'SCRIPT' ) {\n\t\t\t\t//IMG or IFRAME\n\t\t\t\tself.createElem(tag.tagType, src, tag.id);\n\t\t\t} else {\n\t\t\t\tvar scrpt = document.createElement('script');\n\t\t\t\tscrpt.src = src;\n\t\t\t\tself.createElem('iframe', \"\", tag.id, function() {\n\t\t\t\t\tvar doc = this.contentWindow || this.contentDocument;\n\t\t\t\t\tdoc = doc.document || doc;\n\t\t\t\t\tvar head = doc.getElementsByTagName(\"head\")[ 0 ];\n\t\t\t\t\thead.appendChild(scrpt);\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n};\nVendorService.prototype.doubleclickFloodlightCounter = function (tag, index) {\n    var self = this;\n\n    tag.floodlightId = tag.advertiserId;\n\n    //for every tag, load gtm and fire gtag config\n    var html = '<script async src=\"https://www.googletagmanager.com/gtag/js?id=DC-' + tag.floodlightId + '\"></script>';\n    html += '<script>';\n    html += 'window.dataLayer = window.dataLayer || [];';\n    html += 'function gtag(){dataLayer.push(arguments);}';\n    html += 'gtag(\\'js\\', new Date());';\n    html += 'gtag(\\'config\\', \\'DC-' + tag.floodlightId + '\\');';\n\n    html += 'gtag(\\'event\\', \\'conversion\\', {\\'send_to\\': \\'DC-' + tag.advertiserId + '/'\n        + tag.groupTagString + '/' + tag.activityTagString + '+' + tag.countingMethod.toString().toLowerCase() + '\\'';\n    html += ', \\'allow_custom_scripts\\': \\'' + 'false' + '\\'';\n\n    if (typeof tag.customVariables !== 'undefined') {\n        var u = tag.customVariables;\n        for (var i in u) {\n            if (u.hasOwnProperty(i)) {\n                var value = self.getValue(u[i], self.config.data);\n                html += ', \\'' + i + '\\': \\'' + value + '\\'';\n            }\n        }\n    }\n    html += '});';\n    html += '</script>';\n\n    self.createIframeWithContent(tag.id, html, function () {\n        self.log('Iframe added for pixel: ' + tag.id);\n    });\n}\n\nVendorService.prototype.doubleclickFloodlightSales = function (tag, index) {\n    var self = this;\n\n    tag.floodlightId = tag.advertiserId;\n\n    //for every tag, load gtm and fire gtag config\n    var html = '<script async src=\"https://www.googletagmanager.com/gtag/js?id=DC-' + tag.floodlightId + '\"></script>';\n    html += '<script>';\n    html += 'window.dataLayer = window.dataLayer || [];';\n    html += 'function gtag(){dataLayer.push(arguments);}';\n    html += 'gtag(\\'js\\', new Date());';\n    html += 'gtag(\\'config\\', \\'DC-' + tag.floodlightId + '\\');';\n\n    html += 'gtag(\\'event\\', \\'purchase\\', {\\'send_to\\': \\'DC-' + tag.advertiserId + '/'\n        + tag.groupTagString + '/' + tag.activityTagString + '+' + tag.countingMethod.toString().toLowerCase() + '\\'';\n    html += ', \\'allow_custom_scripts\\': \\'' + 'false' + '\\'';\n\n    if ( self.getValue('transaction.transactionID', self.config.data) ) {\n        html += ', \\'value\\':' + self.toFloat(self.getValue('transaction.total.basePrice') , 0);\n        html += ', \\'quantity\\':';\n        html += self.getValue('transaction.attributes.ticketQuantity', self.config.data);\n        html += ', \\'currency\\': \\'' + self.getValue('transaction.total.currency') + '\\'';\n        html += ', \\'transaction_id\\': \\'' + self.getValue('transaction.transactionID') + '\\'';\n    }\n    if (typeof tag.customVariables !== 'undefined') {\n        var u = tag.customVariables;\n        for (var i in u) {\n            if (u.hasOwnProperty(i)) {\n                var value = self.getValue(u[i], self.config.data);\n                html += ', \\'' + i + '\\': \\'' + value + '\\'';\n            }\n        }\n    }\n    html += '});';\n    html += '</script>';\n\n    self.createIframeWithContent(tag.id, html, function () {\n        self.log('Iframe added for pixel: ' + tag.id);\n    });\n};\n\nVendorService.prototype.doubleclickGtagEvent = function (tag, index) {\n    var self = this;\n\n    tag.floodlightId = tag.sendTo.split('/')[0];\n\n    //for every tag, load gtm and fire gtag config\n    var html = '<script async src=\"https://www.googletagmanager.com/gtag/js?id=' + tag.floodlightId + '\"></script>';\n    html += '<script>';\n    html += 'window.dataLayer = window.dataLayer || [];';\n    html += 'function gtag(){dataLayer.push(arguments);}';\n    html += 'gtag(\\'js\\', new Date());';\n    html += 'gtag(\\'config\\', \\'' + tag.floodlightId + '\\');';\n    \n    if (tag.sendTo.indexOf('transactions') !== -1 || tag.sendTo.indexOf('items_sold') !== -1) {\n        html += 'gtag(\\'event\\', \\'purchase\\', {\\'send_to\\': \\'' + tag.sendTo + '\\'';\n    } else {\n        html += 'gtag(\\'event\\', \\'conversion\\', {\\'send_to\\': \\'' + tag.sendTo + '\\'';\n    }\n    html += ', \\'allow_custom_scripts\\': \\'' + 'false' + '\\'';\n    \n    if ( (tag.sendTo.indexOf('transactions') !== -1 || tag.sendTo.indexOf('items_sold') !== -1)\n        && self.getValue('transaction.transactionID', self.config.data)) {\n            html += ', \\'value\\':' + self.toFloat(self.getValue('transaction.total.basePrice') , 0);\n            html += ', \\'quantity\\':';\n            html += tag.sendTo.indexOf('transactions') !== -1 ? 1 : self.getValue('transaction.attributes.ticketQuantity', self.config.data);\n            html += ', \\'currency\\': \\'' + self.getValue('transaction.total.currency') + '\\'';\n            html += ', \\'transaction_id\\': \\'' + self.getValue('transaction.transactionID') + '\\'';\n    }\n    if (typeof tag.customVariables !== 'undefined') {\n        var u = tag.customVariables;\n        for (var i in u) {\n            if (u.hasOwnProperty(i)) {\n                var value = self.getValue(u[i], self.config.data);\n                html += ', \\'' + i + '\\': \\'' + value + '\\'';\n            }\n        }\n    }\n    html += '});';\n    html += '</script>';\n\n    self.createIframeWithContent(tag.id, html, function () {\n        self.log('Iframe added for pixel: ' + tag.id);\n    });\n};\n\nVendorService.prototype.doubleclickPublishersConversion = function (i, index) {\n\tvar self = this;\n\n\tvar img = document.createElement('img');\n\timg.src = 'https://pubads.g.doubleclick.net/activity;xsp=' + i.publisherId;\n\n\n\tif (self.getValue('transaction.transactionID',self.config.data)) {\n\t\timg.src += ';ord=' + self.getValue('transaction.transactionID',self.config.data);\n\t\timg.src += ';cost=' + self.getValue('transaction.total.basePrice',self.config.data);\n\t\tif (i.countingMethod === 'TRANSACTIONS') {\n\t\t\timg.src += ';qty=' + 1;\n\t\t} else {\n\t\t\timg.src += ';qty=' + self.getValue('transaction.attributes.ticketQuantity',self.config.data);\n\t\t}\n\t} else {\n\t\tvar axel = Math.random() + \"\";\n\t\tvar a = axel * 10000000000000;\n\t\timg.src += ';ord=' + a;\n\t}\n\n\timg.src += '?';\n\n\timg.width = 1;\n\timg.height = 1;\n\timg.border = 0;\n\n\tdocument.body.appendChild(img);\n\n};\nVendorService.prototype.facebookAudience = function (tag, index) {\n    var self = this;\n\n//****** Facebook Audience ******//\n    var html = '<script type=\"text/javascript\">';\n    html+= '(function () {';\n    html+= '    var _fbq = window._fbq || (window._fbq = []);';\n    html+= '    if ( !_fbq.loaded ) {';\n    html+= '        var fbds   = document.createElement(\\'script\\');';\n    html+= '        fbds.async = true;';\n    html+= '        fbds.src   = \\'//connect.facebook.net/en_US/fbds.js\\';';\n    html+= '        var s      = document.getElementsByTagName(\\'script\\')[0];';\n    html+= '        s.parentNode.insertBefore(fbds, s);';\n    html+= '        _fbq.loaded = true;';\n    html+= '    }';\n    html+= '    window._fbq.push([\\'addPixelId\\', tag.pixelId]);';\n    html+= '})();';\n\n    html+= 'window._fbq = window._fbq || [];';\n    html+= 'window._fbq.push([\\'track\\', \\'PixelInitialized\\', {}]);';\n\n    if ( self.getValue('transaction.transactionID') ) {\n        html+= 'window._fbq.push([\\'track\\', \\'Purchase\\', {';\n        html+= '    currency: \\'' + self.getValue('transaction.total.currency') + '\\',';\n        html+= '    value:    \\'' + self.getValue('transaction.total.basePrice') + '\\'';\n        html+= '}]);';\n    }\n    else {\n    html+= 'window._fbq.push([\\'track\\', \\'ViewContent\\']);';\n    }\n    html += '</script>';\n\n    self.createIframeWithContent(tag.id, html, function () {\n        self.log('Iframe added for pixel: ' + tag.id);\n    });\n\n//****** End Facebook Audience ******//\n\n};\nVendorService.prototype.facebookConversion = function (tag, index) {\n    var self = this;\n\n//****** Facebook Conversion ******//\n    var html = '<script type=\"text/javascript\">';\n    html+= '(function () {';\n    html+= '    var _fbq = window._fbq || (window._fbq = []);';\n    html+= '    if ( !_fbq.loaded ) {';\n    html+= '        var fbds   = document.createElement(\\'script\\');';\n    html+= '        fbds.async = true;';\n    html+= '        fbds.src   = \\'//connect.facebook.net/en_US/fbds.js\\';';\n    html+= '        var s      = document.getElementsByTagName(\\'script\\')[0];';\n    html+= '        s.parentNode.insertBefore(fbds, s);';\n    html+= '        _fbq.loaded = true;';\n    html+= '    }';\n    html+= '})();';\n    html+= '(function () {';\n    html+= '    window._fbq = window._fbq || [];';\n    html+= '        window._fbq.push([\\'track\\', \\'' + tag.pixelId + '\\', {';\n    html+= '    currency: \\'' + self.getValue('transaction.total.currency') + '\\',';\n    html+= '    value:    \\'' + self.getValue('transaction.total.basePrice') + '\\'';\n    html+= '        }]);';\n    html+= '})();';\n    html += '</script>';\n\n    self.createIframeWithContent(tag.id, html, function () {\n        self.log('Iframe added for pixel: ' + tag.id);\n    });\n\n//****** End Facebook Conversion ******//\n};\n\nVendorService.prototype.facebook = function (tag, index) {\n    var self = this;\n\n    //load the library in the iFrame\n    var html = '<script type=\"text/javascript\">';\n    html += '!function(f, b, e, v, n, t, s) {';\n    html += 'if ( f.fbq ) return;';\n    html += 'n = f.fbq = function() {';\n    html += 'n.callMethod ?';\n    html += 'n.callMethod.apply(n, arguments) : n.queue.push(arguments)';\n    html += '};';\n    html += 'if ( !f._fbq )';\n    html += 'f._fbq = n;';\n    html += 'n.push = n;';\n    html += 'n.loaded = !0;';\n    html += 'n.version = \\'2.0\\';';\n    html += 'n.agent = \\'PLTICKETMASTER\\';';\n    html += 'n.queue = [];';\n    html += 't = b.createElement(e);';\n    html += 't.async = !0;';\n    html += 't.src = v;';\n    html += 's = b.getElementsByTagName(e)[ 0 ];s.parentNode.insertBefore(t, s)';\n    html += '}(window,';\n    html += 'document, \\'script\\', \\'//connect.facebook.net/en_US/fbevents.js\\');';\n\n    //track init and pageView\n    html += 'fbq(\\'set\\', \\'autoConfig\\', false, \\'' + tag.pixelId + '\\');';\n    html += 'fbq(\\'init\\', \\'' + tag.pixelId + '\\');';\n    html += 'fbq(\\'track\\', \\'PageView\\');';\n\n    html += '</script>';\n\n    html += '<script type=\"text/javascript\">';\n\n    if ( self.getValue('transaction.transactionID', self.config.data) ) {\n        var inventoryType = ( parseInt(self.getValue('transaction.attributes.isResale') + 0) !== 0 ) ? 'resale' : 'primary';\n\n        html += 'fbq(\\'track\\', \\'Purchase\\',';\n        html += '{';\n        html += 'value: ' + self.toFloat(self.getValue('transaction.total.basePrice') , 0) + ',';\n        html += 'currency: \\'' + self.getValue('transaction.total.currency') + '\\'';\n        html += ',inventory_type: \\'' + inventoryType + '\\',';\n    } else {\n        html += 'fbq(\\'track\\', \\'ViewContent\\',';\n        html += '{';\n    }\n\n        html += 'hostname: window.parent.location.hostname,';\n        html += 'page_name: \\'' + self.getValue('page.pageInfo.pageName') + '\\',';\n        html += 'event_name: \\'' + self.addSlashes(self.getValue('page.attributes.eventName').replace(/\\x27/g, '\\\\\\x27')) + '\\',';\n        html += 'event_id: \\'' + self.getValue('page.attributes.eventID') + '\\',';\n        html += 'event_cat_major: \\'' + self.addSlashes(self.getValue('page.category.primaryCategory')) + '\\',';\n        html += 'event_cat_minor: \\'' + self.addSlashes(self.getValue('page.category.subCategory1')) + '\\',';\n\n        /* start - added for AS-2229 (Facebook parameters for DPA) */\n        html += 'content_ids: \\'' + self.getValue('page.attributes.eventID') + '\\',';\n        html += 'content_type: \\'product\\',';\n        /* end - added for AS-2229 (Facebook parameters for DPA) */\n\n        html += 'channel: \\'' + (self.getValue('accountManager') == true ? 'Account Manager' : 'Ticketmaster') + '\\',';\n\n        html += 'artist_name: \\'' + self.addSlashes(self.getValue('page.attributes.artistName')) + '\\',';\n        html += 'artist_id: \\'' + self.getValue('page.attributes.artistID') + '\\',';\n        html += 'venue_name: \\'' + self.addSlashes(self.getValue('page.attributes.venueName').replace(/\\x27/g, '\\\\\\x27')) + '\\',';\n        html += 'venue_id: \\'' + self.getValue('page.attributes.venueID') + '\\'';\n\n        html += '}';\n        html += ');';\n\n    html += '</script>';\n\n    self.createIframeWithContent(tag.id, html, function () {\n        self.log('Iframe added for pixel: ' + tag.id);\n    });\n\n};\nVendorService.prototype.googleAdwordsConversion = function (tag, index) {\n\tvar self = this;\n\tvar pixel = JSON.parse(JSON.stringify(tag));\n\n\tvar next = function () {\n\n\t\tvar params = {};\n\t\tparams.google_conversion_id = pixel.conversionId;\n\t\tparams.google_conversion_label = typeof pixel.conversionLabel !== 'undefined' ? pixel.conversionLabel : '';\n\t\tparams.google_remarketing_only = false;\n\t\tparams.google_conversion_value = self.getValue('transaction.total.basePrice');\n\t\tparams.google_conversion_currency = self.getValue('transaction.total.currency') || 'USD';\n\t\tgoogle_trackConversion(params);\n\t};\n\n\n\tif (typeof window.google_trackConversion === 'undefined') {\n\t\tself.getScript(location.protocol + \"//www.googleadservices.com/pagead/conversion_async.js\", null, null,\n\t\t\tfunction () {\n\t\t\t\tnext();\n\t\t\t});\n\n\t} else {\n\t\tnext();\n\t}\n\n};\nVendorService.prototype.googleAdwordsGtagEvent = function (tag, index) {\n    var self = this;\n\n    //check for a sendTo parameter\n    if(tag.sendTo) {\n        tag.conversionId = tag.sendTo.split('/')[0];\n        tag.conversionLabel = tag.sendTo.split('/')[1];\n    }\n\n    //for every tag, load gtm and fire gtag config\n    var html = '<script async src=\"https://www.googletagmanager.com/gtag/js?id=' + tag.conversionId + '\"></script>';\n    html += '<script>';\n    html += 'window.dataLayer = window.dataLayer || [];';\n    html += 'function gtag(){dataLayer.push(arguments);}';\n    html += 'gtag(\\'js\\', new Date());';\n    html += 'gtag(\\'config\\', \\'' + tag.conversionId + '\\');';\n    \n    //for tags with a conversion label, fire a conversion event (these would be the \"event tags\" (vs. global site tags))\n    if(tag.conversionLabel) {\n\n        if (self.getValue('transaction.transactionID', self.config.data)) {\n            html += 'gtag(\\'event\\', \\'purchase\\', {\\'send_to\\': \\'' + tag.conversionId + '/' + tag.conversionLabel + '\\'';\n        } else {\n            html += 'gtag(\\'event\\', \\'conversion\\', {\\'send_to\\': \\'' + tag.conversionId + '/' + tag.conversionLabel + '\\'';\n        }\n\n        if(self.getValue('transaction.transactionID', self.config.data)) {\n            html += ', \\'value\\':' + self.toFloat(self.getValue('transaction.total.basePrice') , 0);\n            html += ', \\'currency\\': \\'' + self.getValue('transaction.total.currency') + '\\'';\n            html += ', \\'transaction_id\\': \\'' + self.getValue('transaction.transactionID') + '\\'';\n        }\n        \n        html += '});';\n\n    }\n    \n    html += '</script>';\n\n    self.createIframeWithContent(tag.id, html, function () {\n        self.log('Iframe added for pixel: ' + tag.id);\n    });\n\n};\nVendorService.prototype.googleAdwordsGtagGlobal = function (tag, index) {\n    var self = this;\n\n    //for every tag, load gtm and fire gtag config\n    var html = '<script async src=\"https://www.googletagmanager.com/gtag/js?id=' + tag.adWordsId + '\"></script>';\n    html += '<script>';\n    html += 'window.dataLayer = window.dataLayer || [];';\n    html += 'function gtag(){dataLayer.push(arguments);}';\n    html += 'gtag(\\'js\\', new Date());';\n    html += 'gtag(\\'config\\', \\'' + tag.adWordsId + '\\');';\n    html += '</script>';\n\n    self.createIframeWithContent(tag.id, html, function () {\n        self.log('Iframe added for pixel: ' + tag.id);\n    });\n\n};\nVendorService.prototype.googleAdwordsRemarketing = function (tag, index) {\n    var self = this;\n\n    //****** Adwords Conversion ******//\n    var pixel = JSON.parse(JSON.stringify(tag));\n\n    var next = function (arr) {\n        var params = {};\n        params.google_conversion_id = pixel.conversionId;\n        params.google_conversion_label = typeof pixel.conversionLabel !== 'undefined' ? pixel.conversionLabel : '';\n        params.google_remarketing_only = true;\n        params.google_conversion_value = self.getValue('transaction.total.basePrice');\n        google_trackConversion(params);\n    };\n\n    if (typeof window.google_trackConversion === 'undefined') {\n\n        self.getScript(location.protocol + '//www.googleadservices.com/pagead/conversion_async.js', null, null,\n            function () {\n                next();\n            });\n\n    } else {\n        next();\n    }\n    //****** End Adwords Retargeting ******//\n};\n//****** Google Analytics ******//\n// This legacy tag runs analytics.js in the top DOM of the page, it should be sequestered in an IFRAME as of 2019 InfoSec practices\n// However GA3 will be sunset by Google on July 1, 2023 so this is left as-is to be deprecated while maintaining consistency\n// Input :\n//\t* tag \t: the object deserialized from the json pixel TM1 marketing has generated\n//\t* index : index of the current tag in the page. Part of the general vendor interface that is called in src/lib/prototypes/processPixels.js L14\n\nfunction loadGoogleAnalyticsLibrary() {\n\t// this _should_ be loaded on all pages by way of TM Analytics Platform, but just in case\n\tvar windowObject = window, domDocument = document, scriptTag = 'script', gaEndpointUrl = '//www.google-analytics.com/analytics.js', libKey = 'ga';\n\twindowObject['GoogleAnalyticsObject'] = libKey;\n\twindowObject[libKey] = windowObject[libKey] || function () {\n\t\t(windowObject[libKey].q = windowObject[libKey].q || []).push(arguments)\n\t}, windowObject[libKey].l = 1 * new Date();\n\n\tvar scriptElement = domDocument.createElement(scriptTag), firstScriptTagInDom = domDocument.getElementsByTagName(scriptTag)[0];\n\tscriptElement.async = 1;\n\tscriptElement.src = gaEndpointUrl;\n\tfirstScriptTagInDom.parentNode.insertBefore(scriptElement, firstScriptTagInDom);\n}\n\n// Helper: Build Product actionFieldObject for ecommerce to this named tracker\n// Named tracker documentation : https://support.google.com/tagmanager/answer/2574372#TrackerName\nconst htmlSingleQuote = '\\\\\\x27';\nvar buildAndSendEcommerceEvents = function (gaVendorService, trackerName, tag) {\n\tvar require = trackerName + \".require\";\n\tvar ecom = trackerName + \".ec\";\n\tga(require, 'ec');\n\n\t// First, get all the generic Product stuff with values we know are present in fanbuilder\n\tvar productInfo = {\n\t\tid: gaVendorService.getValue('page.attributes.eventID'),\n\t\tname: gaVendorService.getValue('googleAnalytics.productInfo.name') || gaVendorService.getValue('page.attributes.eventName').replace(/\\x27/g, htmlSingleQuote),\n\t\tcategory: gaVendorService.getValue('googleAnalytics.productInfo.category') || gaVendorService.getValue('page.category.primaryCategory') || gaVendorService.getValue('page.attributes.eventType') || \"\",\n\t\tbrand: gaVendorService.getValue('accountManager') ? 'Account Manager' : 'Ticketmaster'\n\t};\n\n\t// Second, Add Product custom dimensions (can't tell if it is hit/session/product scoped so add to both, GA will ignore invalid scopes)\n\tif (typeof tag.customVariables !== 'undefined') {\n\t\tfor (var key in tag.customVariables) {\n\t\t\tproductInfo[key] = gaVendorService.getValue(tag.customVariables[key]);\n\t\t}\n\t}\n\n\t// Third, add ec Products Actions to the hit, if its a confirmation page, add products and purchase action\n\t// Official documentation :\n\t// \t* https://developers.google.com/analytics/devguides/collection/analyticsjs/ecommerce\n\t//\t* https://developers.google.com/analytics/devguides/collection/analyticsjs/enhanced-ecommerce\n\t// A good step by step guide : https://www.optimizesmart.com/implementing-enhanced-ecommerce-tracking-universal-analytics/\n\tif(gaVendorService.getValue('transaction.transactionID')){\n\t\t// Augment productInfo above with processedItems that expand transaction data for cat/variant/etc\n\t\t// \t \"processedItems\" is a construct in Google Tag Manager that handles platform fixes/issues\n\t\tvar processedItemsLength = gaVendorService.getValue('googleAnalytics.productInfo.processedItems').length || 1;\n\t\tfor(var i=0; i<processedItemsLength; i++){\n\t\t\t// Here we take that info and apply \"safe\" backups in case it is missing for critical transaction attributes\n\t\t\tvar processedItemsDefined = gaVendorService.getValue('googleAnalytics.productInfo.processedItems') && gaVendorService.getValue('googleAnalytics.productInfo.processedItems')[i];\n\t\t\tproductInfo.id = processedItemsDefined ? gaVendorService.getValue('googleAnalytics.productInfo.processedItems')[i].gaId : gaVendorService.getValue('page.attributes.eventID');\n\t\t\tproductInfo.name = processedItemsDefined ? gaVendorService.getValue('googleAnalytics.productInfo.processedItems')[i].gaName : ( gaVendorService.getValue('googleAnalytics.productInfo.name') || gaVendorService.getValue('page.attributes.eventName').replace(/\\x27/g, htmlSingleQuote) || \"\" );\n\t\t\tproductInfo.category = processedItemsDefined ? gaVendorService.getValue('googleAnalytics.productInfo.processedItems')[i].gaCategory : ( gaVendorService.getValue('page.category.primaryCategory') || gaVendorService.getValue('page.attributes.eventType') || \"\" );\n\t\t\tproductInfo.variant = processedItemsDefined ? gaVendorService.getValue('googleAnalytics.productInfo.processedItems')[i].gaVariant : ( gaVendorService.getValue('googleAnalytics.productInfo.variant') || \"\" );\n\t\t\tproductInfo.quantity = processedItemsDefined ? gaVendorService.getValue('googleAnalytics.productInfo.processedItems')[i].quantity : gaVendorService.getValue('transaction.attributes.ticketQuantity');\n\t\t\tproductInfo.price = processedItemsDefined ? gaVendorService.getValue('googleAnalytics.productInfo.processedItems')[i].price.basePrice : ( gaVendorService.getValue('transaction.total.basePrice')/gaVendorService.getValue('transaction.attributes.ticketQuantity') );\n\t\t\tproductInfo.brand = gaVendorService.getValue('accountManager') ? 'Account Manager' : gaVendorService.getValue('googleAnalytics.productInfo.confirmationBrand');\n\t\t\tga(ecom + ':addProduct', productInfo);\n\t\t}\n\t\t//then, call a single purchase event with totals included (sent with pageview below to named tracker object)\n\t\tga(ecom + ':setAction', 'purchase', {\n\t\t\tid: gaVendorService.getValue('transaction.transactionID'),\n\t\t\taffiliation: 'Ticketmaster',\n\t\t\trevenue: gaVendorService.getValue('transaction.total.basePrice'),\n\t\t\tcurrency: gaVendorService.getValue('transaction.total.currency')\n\t\t});\n\t} else if ( gaVendorService.getValue('page.attributes.eventID') ){ //if you are on an EDP and have event info, Add a Product Impression\n\t\tga(ecom + ':addProduct', productInfo );\n\t\tga(ecom + ':setAction', 'detail');\n\t}\n};\n\nVendorService.prototype.googleAnalyticsV2 = function (tag, index) {\n    var self = this;\n\n\tif( !window.ga ) {\n\t\tloadGoogleAnalyticsLibrary();\n\t}\n\n\t// Prepare tracker object and send page hit\n\tif (typeof tag.trackingId !== \"undefined\") {\n\t\tvar trackerName = 'tracker' + tag.id;\n\t\tga('create', tag.trackingId, 'auto', {'name': trackerName, 'allowLinker': true});\n\t\t// Add Hit/Session Custom Dimensions (separate function for jest tests, could be done here as with products)\n\t\tself.addGA2CustomDimensions(ga, trackerName, tag.customVariables);\n\t\tbuildAndSendEcommerceEvents(self, trackerName, tag);\n\t\tga(trackerName + '.send', 'pageview');\n\t}\n};\n\nVendorService.prototype.googleAnalyticsV4 = function (tag, index) {\n    /*\n     This vendor uses some unusual adaptations to manage GA4 data integrity\n      1 - Rename both the dataLayer and gtag object to prevent client tags from \"hearing\"\n            other pushes.  Shouldn't happen in the IFRAME but gtag has shown it can do this\n            when similar approach used in GTM\n                https://developers.google.com/tag-platform/devguides/dataLayer#rename_the_data_layer\n                https://developers.google.com/analytics/devguides/collection/gtagjs/renaming-the-gtag-object\n      2 - Hard disable to the tracker with setTimeout() as normally it will continue to try to listen for\n            Enhanced Measurement events which we cannot control but clients can set in their config.\n                https://support.google.com/analytics/answer/9216061\n      3 - Use the new token from GTM override productDataJson, an enhanced and formatted JSON object for GA/CCV vendors\n    */\n    var self = this;\n\n    if (isTrackingIdValid(tag)) {\n        var html = self.generateGA4HtmlScriptTag(tag);\n\n        self.createIframeWithContent(tag.id, html, function () {\n            self.log('Iframe added for pixel: ' + tag.id);\n        });\n    } else {\n        self.log('Invalid GA4 ID: ' + tag.trackingId);\n    }\n};\n\nvar isTrackingIdValid =  function(tag) {\n    var gaTrackingIdPrefix = 'G-';\n    return !!tag.trackingId && tag.trackingId.indexOf(gaTrackingIdPrefix) !== -1;\n}\n\nVendorService.prototype.googleAnalytics = function (tag, index) {\n    var self = this;\n\n//****** Google Analytics ******//\n\n        (function (i, s, o, g, r, a, m) {\n            i['GoogleAnalyticsObject'] = r;\n            i[r] = i[r] || function () {\n                    (i[r].q = i[r].q || []).push(arguments)\n                }, i[r].l = 1 * new Date();\n            a = s.createElement(o),\n                m = s.getElementsByTagName(o)[0];\n            a.async = 1;\n            a.src = g;\n            m.parentNode.insertBefore(a, m)\n        })(window, document, 'script', '//www.google-analytics.com/analytics.js', 'ga');\n\n        var collectProductInfo = function (){\n        \tvar productInfo = {\n        \t    'id': self.getValue('page.attributes.eventID'),\n        \t    'name': self.getValue('page.attributes.eventName').replace(/\\x27/g, '\\\\\\x27') + ' on ' + self.getValue('page.attributes.eventDate') + ' at ' + self.getValue('page.attributes.venueName').replace(/\\x27/g, '\\\\\\x27'),\n        \t    'category': self.getValue('page.category.primaryCategory') || self.getValue('page.attributes.eventType')\n        \t};\n\n        \tif(self.getValue('transaction.transactionID')){\n        \t\tproductInfo.variant = self.getValue('transaction.attributes.isResale') ? 'Resale' : 'Primary';\n        \t    productInfo.quantity = self.getValue('transaction.attributes.ticketQuantity');\n        \t    productInfo.price = self.getValue('transaction.total.basePrice')/self.getValue('transaction.attributes.ticketQuantity');\n        \t}\n        \t\n        \treturn productInfo;\n        };\n        \n        var ecommerce = function (acct) {\n            \n\t        var require = acct + \".require\";\n\t        var ecom = acct + \".ec\";\n\t        ga(require, 'ec');\n                \n\t        //if its a confirmation page, add products and purchase action\n\t        if(self.getValue('transaction.transactionID')){\n\t        \tga(ecom + ':addProduct', collectProductInfo());\n\t        \tga(ecom + ':setAction', 'purchase', {\n\t        \t\t  'id': self.getValue('transaction.transactionID'),\n\t        \t\t  'affiliation': 'Ticketmaster',\n\t        \t\t  'revenue': self.getValue('transaction.total.basePrice')\n\t        \t});\n\t        }\n\t        //if you are on an EDP and have event info, count an impression\n\t        else if (self.getValue('page.attributes.eventID')){\n\t        \tga(ecom + ':addImpression', collectProductInfo());\n\t        }\n        };\n\n       \n            if (typeof tag.trackingId !== \"undefined\") {\n                var name = 'tracker' + tag.id;\n                ga('create', tag.trackingId, 'auto', {'name': name, 'allowLinker': true});\n                ecommerce(name);\n                ga(name + '.send', 'pageview');\n            }\n\n    \n//****** End Google Analytics ******//\n};\nVendorService.prototype.lotame = function (tag, index) {\n    var self = this;\n\n            var img = document.createElement('img');\n            img.src = 'https://bcp.crwdcntrl.net/5/c=' + tag.clientId;\n            img.src += '/b=' + tag.behaviorId;\n            img.width = 1;\n            img.height = 1;\n\n            document.body.appendChild(img);\n\n};\nVendorService.prototype.marketo = function (tag, index) {\n    var self = this;\n\n        var iframe = document.createElement('iframe');\n        iframe.style.cssText = 'width:1px; height:1px; display:none;';\n        iframe.frameborder = 0;\n        iframe.id = tag.id;\n        var html = '<script type=\"text/javascript\" src=\"//munchkin.marketo.net/munchkin.js\"></script>';\n\n        html += '<script type=\"text/javascript\">';\n        html += 'Munchkin.init(\"' + tag.munchkinId + '\");';\n        html += 'Munchkin.munchkinFunction(\"visitWebPage\", { url: \"' + self.getValue('page.pageInfo.pageName') + '\" } );';\n        html += '</script>';\n\n        document.body.appendChild(iframe);\n        var doc = (iframe.contentWindow || iframe.contentDocument);\n\t\tif (doc.document)doc = doc.document;\n    \tdoc.open();\n        doc.write(html);\n        doc.close();\n\n        \n};\nVendorService.prototype.mediamath = function (tag, index) {\n    var self = this;\n\n            var img = document.createElement('img');\n            img.src = '//pixel.mathtag.com/event/img?mt_id=' + tag.pixelId;\n            img.src += '&mt_adid=' + tag.advertiserId;\n            img.style.display = 'none';\n            img.width = 1;\n            img.height = 1;\n\n            if (typeof tag.customVariables !== 'undefined') {\n                var u = tag.customVariables;\n                for (var i in u) {\n                    if (u.hasOwnProperty(i)) {\n                        img.src += '&' + i + '=' + self.getValue(u[i]);\n                    }\n                }\n            }\n            document.body.appendChild(img);\n\n};\n\nVendorService.prototype.oracleBluekai = function (tag, index) {\n    var self = this;\n\n    //load the library in the iFrame\n    var html = '<script>';\n    html+= 'window.bk_async = function() {';\n    html+= 'bk_addPageCtx(\\'' + tag.phintKey + '\\', \\'' + tag.phintValue + '\\');';\n    html+= 'BKTAG.doTag(' + tag.siteId + ', 1);';\n    html+= '};';\n\n    html+= '(function() {';\n    html+= 'var scripts = document.getElementsByTagName(\\'script\\')[0];';\n    html+= 'var s = document.createElement(\\'script\\');';\n    html+= 's.async = true;';\n    html+= 's.src = \"https://tags.bkrtx.com/js/bk-coretag.js\";';\n    html+= 'scripts.parentNode.insertBefore(s, scripts);';\n    html+= '}());';\n    html+= '</script>';\n\n    self.createIframeWithContent(tag.id, html, function () {\n        self.log('Iframe added for pixel: ' + tag.id);\n    });\n}\n\n\nVendorService.prototype.oracleEloqua = function(tag, index) {\n  var self = this;\n  var src = '//s' + tag.siteId + '.t.eloqua.com/visitor/v200/svrGP?pps=3&siteid=' + tag.siteId;\n  self.createElem('img', src, tag.id);\n\n};\nVendorService.prototype.pinterest = function (tag, index) {\n    var self = this;\n\n    //load the library in the iFrame\n    var html = '<script>';\n    html += '!function(e){if(!window.pintrk){window.pintrk = function () {';\n    html += 'window.pintrk.queue.push(Array.prototype.slice.call(arguments))};';\n    html += 'var n=window.pintrk;n.queue=[],n.version=\"3.0\";';\n    html += 'var t=document.createElement(\"script\");t.async=!0,t.src=e;';\n    html += 'var r=document.getElementsByTagName(\"script\")[0];';\n    html += 'r.parentNode.insertBefore(t,r)}}';\n    html += '(\"https://s.pinimg.com/ct/core.js\");';\n\n    html += 'pintrk(\\'load\\', \\'' + tag.conversionTagId + '\\');';\n    html += 'pintrk(\\'page\\');';\n\n    if ( self.getValue('transaction.transactionID', self.config.data) ) {\n        html += 'pintrk(\\'track\\', \\'checkout\\', {';\n        html += 'value: ' + self.toFloat(self.getValue('transaction.total.basePrice') , 0) + ',';\n        html += 'order_quantity: ' + self.getValue('transaction.attributes.ticketQuantity', self.config.data) + ',';\n        html += 'currency: \\'' + self.getValue('transaction.total.currency') + '\\',';\n        html += 'line_items: [{';\n        html += 'product_name: \\'' + self.getValue('page.attributes.eventName') + '\\',';\n        html += 'product_id: \\'' + self.getValue('page.attributes.eventID') + '\\',';\n        html += 'product_category: \\'' + self.getValue('page.attributes.artistID') + '\\'';\n        html += '}]';\n        html += '});';\n    }\n\n    html+= '</script>';\n\n    self.createIframeWithContent(tag.id, html, function () {\n        self.log('Iframe added for pixel: ' + tag.id);\n    });\n}\n\nVendorService.prototype.quantcast = function (tag, index) {\n    var self = this;\n\n    window._qevents = window._qevents || [];\n\n    (function () {\n        var elem   = document.createElement('script');\n        elem.src   =\n            (document.location.protocol === 'https:' ? 'https://secure' : 'http://edge')\n            + '.quantserve.com/quant.js';\n        elem.async = true;\n        elem.type  = 'text/javascript';\n        var scpt   = document.getElementsByTagName('script')[0];\n        scpt.parentNode.insertBefore(elem, scpt);\n    })();\n\n    var cust = [];\n    if ( typeof tag.customLabels !== 'undefined' ) {\n        var u = tag.customLabels;\n        for ( var i in u ) {\n            if ( u.hasOwnProperty(i) ) {\n                if ( u[i] === 'CUSTOM_SEGMENT' ) {\n                    cust.push('_fp.channel.' + i);\n                }\n                else if ( u[i] === 'VARIABLE' ) {\n                    cust.push('_fp.channel.' + self.getValue(i));\n                }\n            }\n        }\n    }\n    cust.push('_fp.event.' + self.getValue('page.pageInfo.pageName'));\n    cust.push('_fp.pcat.' + self.getValue('page.attributes.eventName').replace(/\\x27/g, '\\\\\\x27'));\n    var labelString = cust.join(', ');\n    if ( self.getValue('transaction.transactionID') ) {\n        _qevents.push({\n                          qacct:   tag.pcode,\n                          labels:  labelString,\n                          orderid: self.getValue('transaction.transactionID'),\n                          revenue: self.getValue('transaction.total.basePrice').toString()\n                      });\n    }\n    else {\n        _qevents.push({\n                          qacct:  tag.pcode,\n                          labels: labelString\n                      });\n    }\n\n};\nVendorService.prototype.rocketfuel = function (tag, index) {\n    var self = this;\n\n//<!-- Begin Rocket Fuel Conversion Action Tracking Code Version 9 -->\n        (function () {\n            var w = window, d = document;\n            var s = d.createElement('script');\n            s.setAttribute('async', 'true');\n            s.setAttribute('type', 'text/javascript');\n            s.setAttribute('src', '//c1.rfihub.net/js/tc.min.js');\n            var f = d.getElementsByTagName('script')[0];\n            f.parentNode.insertBefore(s, f);\n            if (typeof w['_rfi'] !== 'function') {\n                w['_rfi'] = function () {\n                    w['_rfi'].commands = w['_rfi'].commands || [];\n                    w['_rfi'].commands.push(arguments);\n                };\n            }\n                _rfi('setArgs', 'ver', '9');\n                _rfi('setArgs', 'rb', tag.accountId);\n                _rfi('setArgs', 'ca', tag.conversionId);\n                _rfi('track');\n        })();\n\n};\nVendorService.prototype.rubiconConversion = function (tag, index) {\n    var self = this;\n\n    if ( self.getValue('transaction.transactionID') ) {\n        var src = '//as.chango.com/conv/i?' + tag.conversionId + '&cost=' + self.getValue('transaction.total.basePrice') + '&order_id=' + self.getValue('transaction.transactionID') + '&quantity=' + self.getValue('transaction.attributes.ticketQuantity');\n        self.createElem('img', src, tag.id);\n    }\n};\n\nVendorService.prototype.rubiconRetargeting = function (tag, index) {\n    var self = this;\n\n    var src = '//cc.chango.com/c/o?pid=' + tag.segmentId;\n    self.createElem('img', src, tag.id);\n\n};\nVendorService.prototype.sitescout = function (tag, index) {\n    var self = this;\n    var src  = self.getValue('transaction.transactionID') ? '//clickserv.sitescout.com/conv/' + tag.conversionId + '/' + self.getValue('transaction.total.basePrice') : ('//pixel.sitescout.com/iap/' + tag.conversionId);\n\n    self.createElem('img', src, tag.id);\n\n};\nVendorService.prototype.sizmekV2 = function (tag, index) {\n    var self = this;\n\n    //****** Start Sizmek ******//\n    var rnd = Math.random() * 1000000;\n\n    var ep = document.location.protocol + '//bs.serving-sys.com/BurstingPipe/ActivityServer.bs?ifrm=1&cn=as&rnd=' + rnd + '&';\n\n    var standardParams = [\n        ['ProductID', self.getValue('page.attributes.eventID')],\n        ['ProductInfo', self.getValue('page.attributes.eventName').replace(/\\x27/g, '\\\\\\x27')]\n    ];\n\n    var enhancedParams = [\n        ['ArtistID', self.getValue('page.attributes.artistID')],\n        ['ArtistName', self.getValue('page.attributes.artistName')],\n        ['Country', self.getValue('page.attributes.country')],\n        ['EventDate', self.getValue('page.attributes.eventDate')],\n        ['EventState', self.getValue('page.attributes.state')],\n        ['EventTime', self.getValue('page.attributes.eventTime')],\n        ['EventZip', self.getValue('page.attributes.zip')],\n        ['MajorcatID', self.getValue('page.category.primaryCategoryID')],\n        ['MinorcatID', self.getValue('page.category.subCategory1ID')],\n        ['PageName', self.getValue('page.pageInfo.pageName')],\n        ['VenueID', self.getValue('page.attributes.venueID')],\n        ['VenueName', self.getValue('page.attributes.venueName').replace(/\\x27/g, '\\\\\\x27')],\n        ['VenueZip', self.getValue('page.attributes.zip')]\n    ];\n\n    if ( self.getValue('transaction.transactionID') ) {\n\n        var value = parseFloat(self.getValue('transaction.total.basePrice')).toFixed(2);\n        standardParams.push(['OrderID', self.getValue('transaction.transactionID')]);\n        standardParams.push(['Value', value]);\n        standardParams.push(['Quantity', self.getValue('transaction.attributes.ticketQuantity')]);\n\n        var inventoryType = ( parseInt(self.getValue('transaction.attributes.isResale') + 0) !== 0 ) ? 'resale' : 'primary';\n        enhancedParams.push(['InventoryType', inventoryType]);\n        enhancedParams.push(['PurchaseDate', self.getValue('transaction.attributes.orderDate')]);\n        enhancedParams.push(['PurchaseTime', self.getValue('transaction.attributes.orderTime')]);\n\n    }\n\n    var prefixedParams = [],\n        activityId     = typeof tag.activityId !== 'undefined' ? tag.activityId : '00000';\n\n    var prefix = '';\n    if ( typeof tag.prefix !== 'undefined' ) {\n        prefix = tag.prefix;\n    }\n\n    //all tags get the standard params\n    for ( var j = 0; j < standardParams.length; j++ ) {\n        var param = standardParams[j];\n        prefixedParams.push([prefix + param[0], param[1]]);\n    }\n\n    //add extra variables for enhanced tags\n    if ( tag.enhancedData && tag.enhancedData === true ) {\n        for ( var k = 0; k < enhancedParams.length; k++ ) {\n            var param = enhancedParams[k];\n            prefixedParams.push([prefix + param[0], param[1]]);\n        }\n    }\n\n    (function (ep, p, d) {\n\n        var sizmekFrame           = d.createElement('iframe');\n        sizmekFrame.style.cssText = 'width:1px; height:1px; display:none;';\n        var url                   = ep + 'ActivityID=' + activityId + '&';\n        p.forEach(function (item, index) {\n            url += item[0] + '=' + encodeURIComponent(item[1]) + '&';\n        });\n        sizmekFrame.src         = url;\n        sizmekFrame.width       = 0;\n        sizmekFrame.height      = 0;\n        sizmekFrame.frameborder = 0;\n        sizmekFrame.hspace      = 0;\n        sizmekFrame.vspace      = 0;\n        sizmekFrame.scrolling   = 'no';\n        sizmekFrame.title       = 'Advertisement Content';\n        sizmekFrame.bordercolor = '#000000';\n\n        document.body.appendChild(sizmekFrame);\n\n    })(ep, prefixedParams, document);\n\t\n};\nVendorService.prototype.sizmek = function (tag, index) {\n    var self = this;\n\n//****** Start Sizmek ******//\n    var rnd = Math.random() * 1000000;\n\n    var ep     = document.location.protocol\n                 + '//bs.serving-sys.com/BurstingPipe/ActivityServer.bs?ifrm=1&cn=as&rnd=' + rnd + '&',\n        params = [\n            ['ArtistID', self.getValue('page.attributes.artistID')],\n            ['VenueID', self.getValue('page.attributes.venueID')],\n            ['MinorcatID', self.getValue('page.category.subCategory1ID')],\n            ['MajorcatID', self.getValue('page.category.primaryCategoryID')],\n            ['EventID', self.getValue('page.attributes.eventID')],\n            ['EventName', self.getValue('page.attributes.eventName').replace(/\\x27/g, '\\\\\\x27')],\n            ['VenueZip', self.getValue('page.attributes.zip')],\n            ['DmaID', self.getValue('DMA ID')],\n            ['EventTime', self.getValue('page.attributes.eventTime')],\n            ['EventState', self.getValue('page.attributes.state')],\n            ['EventZip', self.getValue('page.attributes.zip')],\n            ['EventDate', self.getValue('page.attributes.eventDate')],\n            ['Country', self.getValue('page.attributes.country')],\n            ['EventTimeZone', ''],\n            ['Promoter', self.getValue('page.pageInfo.promoterID')],\n            ['ProductID', self.getValue('page.attributes.eventID')],\n            ['ProductInfo', self.getValue('page.attributes.eventName').replace(/\\x27/g, '\\\\\\x27')]\n        ];\n\n    if ( self.getValue('transaction.transactionID') ) {\n\n        var value = parseFloat(self.getValue('transaction.total.basePrice')).toFixed(2);\n\n        params.push(['PurchaseTime', self.getValue('transaction.attributes.orderTime')]);\n        params.push(['PurchaseDay', '']);\n        params.push(['PurchaseDate', self.getValue('transaction.attributes.orderDate')]);\n        params.push(['ConfCode',\n                     self.getValue('transaction.transactionID')]);\n        params.push(['OrderID',\n                     self.getValue('transaction.transactionID')]);\n        params.push(['FValue', value]);\n        params.push(['Value', value]);\n        params.push(['TixP', self.getValue('transaction.attributes.ticketQuantity')]);\n        params.push(['Quantity', self.getValue('transaction.attributes.ticketQuantity')]);\n        //todo:fix this for everyone\n        if ( window.tm_omn && window.tm_omn.eVar33 ) {\n            params.push(['TicketType', window.tm_omn.eVar33]);\n        } else {\n            params.push(['TicketType', self.getValue('transaction.attributes.ticketType')]);\n\n        }\n\n        if ( /\\/resale\\/checkout\\/order/.test(document.location.pathname) ) {\n            params.push(['Page', 'checkout_resale']);\n            params.push(['PageName', self.getValue('page.pageInfo.pageName')]);\n        } else {\n            params.push(['PageName', 'confirmation']);\n        }\n    } else {\n        params.push(['PageName', self.getValue('page.pageInfo.pageName')]);\n    }\n    var i = 0;\n\n    var prefixedParams = [],\n        activityId     = typeof tag.activityId !== 'undefined' ? tag.activityId : '00000';\n    if ( typeof tag.prefix !== 'undefined' ) {\n        for ( var j = 0; j < params.length; j++ ) {\n            param = params[j];\n            prefixedParams.push([tag.prefix + param[0], param[1]]);\n        }\n    }\n\n    if ( typeof tag.type.name !== 'undefined' && tag.type.name.indexOf(':Retargeting')\n                                                    !== -1 ) {\n        var url = 'https://bs.serving-sys.com/Serving?CN=ntt&TID=' + activityId\n                  + '&TVAL=z&rnd=' + ebRand;\n        self.ajax(url);\n\n    } else {\n\n        (function (ep, p, d) {\n\n            var sizmekFrame           = d.createElement('iframe');\n            sizmekFrame.style.cssText = 'width:1px; height:1px; display:none;';\n            var url                   = ep + 'ActivityID=' + activityId + '&';\n            p.forEach(function (item, index) {\n                url += item[0] + '=' + encodeURIComponent(item[1]) + '&';\n            });\n            sizmekFrame.src         = url;\n            sizmekFrame.width       = 0;\n            sizmekFrame.height      = 0;\n            sizmekFrame.frameborder = 0;\n            sizmekFrame.hspace      = 0;\n            sizmekFrame.vspace      = 0;\n            sizmekFrame.scrolling   = 'no';\n            sizmekFrame.title       = 'Advertisement Content';\n            sizmekFrame.bordercolor = '#000000';\n\n            document.body.appendChild(sizmekFrame);\n\n        })(ep, prefixedParams.length > 0 ? prefixedParams : params, document);\n    }\n\n//****** End Sizmek ******//\n};\nVendorService.prototype.snap = function (tag, index) {\n    var self = this;\n\n    //load the library in the iFrame\n    var html = '<script>';\n    html += '(function(win, doc, sdk_url){' +\n        'if(win.snaptr) return;' +\n        'var tr=win.snaptr=function(){' +\n        'tr.handleRequest? tr.handleRequest.apply(tr, arguments):tr.queue.push(arguments);' +\n        '};' +\n        'tr.queue = [];v' +\n        'ar s=\\'script\\';' +\n        'var new_script_section=doc.createElement(s);' +\n        'new_script_section.async=!0;' +\n        'new_script_section.src=sdk_url;' +\n        'var insert_pos=doc.getElementsByTagName(s)[0];' +\n        'insert_pos.parentNode.insertBefore(new_script_section, insert_pos);})' +\n        '(window, document, \\'https://sc-static.net/scevent.min.js\\');';\n    html += 'snaptr(\\'init\\',\\'' + tag.pixelId + '\\');';\n    html += 'snaptr(\\'track\\',\\'PAGE_VIEW\\');';\n\n    if ( self.getValue('transaction.transactionID', self.config.data) ) {\n        html += 'snaptr(\\'track\\',\\'PURCHASE\\',  {';\n        html += '\\'currency\\':\\'' + self.getValue('transaction.total.currency') + '\\',';\n        html += '\\'price\\':' + self.toFloat(self.getValue('transaction.total.basePrice') , 0) + ',';\n        html += '\\'number_items\\':\\'' + self.getValue('transaction.attributes.ticketQuantity', self.config.data) + '\\',';\n        html += '\\'transaction_id\\':\\'' + self.getValue('transaction.transactionID', self.config.data) + '\\'';\n        html += '});';\n    }\n\n    html+= '</script>';\n\n    self.createIframeWithContent(tag.id, html, function () {\n        self.log('Iframe added for pixel: ' + tag.id);\n    });\n}\n\nVendorService.prototype.sportsDesk = function (tag, index) {\n    var self = this;\n\n    var img = document.createElement('script');\n    img.src = '//secfld.vmmpxl.com/?bkt=' + tag.pixelId;\n\n    if ( typeof tag.customVariables !== 'undefined' ) {\n        var u = tag.customVariables;\n        for ( var i in u ) {\n            if ( u.hasOwnProperty(i) ) {\n                img.src += '&' + i + '=' + self.getValue(u[i]);\n            }\n        }\n    }\n    document.body.appendChild(img);\n};\n\nVendorService.prototype.theTradeDeskUniversal = function (tag, index) {\n    var self = this;\n\n    //load the library in the iFrame\n    var html = '<script src=\"https://js.adsrvr.org/up_loader.1.1.0.js\"></script>';\n    html += '<script>';\n    html += 'var dynParam = {};';\n\n    if ( self.getValue('transaction.transactionID', self.config.data) ) {\n        html += 'dynParam.orderid = \\'' + self.getValue('transaction.transactionID', self.config.data) + '\\';';\n        html += 'dynParam.v = \\'' + self.toFloat(self.getValue('transaction.total.basePrice') , 0) + '\\';';\n        html += 'dynParam.vf = \\'' + self.getValue('transaction.total.currency') + '\\';';\n    }\n\n    if (typeof tag.customVariables !== 'undefined') {\n        var u = tag.customVariables;\n        for (var i in u) {\n            if (u.hasOwnProperty(i)) {\n                html += 'dynParam.' + i + ' = \\'' + self.getValue(u[i], self.config.data) + '\\';';\n            }\n        }\n    }\n\n    html += 'ttd_dom_ready( function() {';\n    html += 'if (typeof TTDUniversalPixelApi === \\'function\\') {';\n    html += 'var universalPixelApi = new TTDUniversalPixelApi();';\n    html += 'universalPixelApi.init(\"' + tag.advertiserId + '\", [\"' + tag.tagId + '\"], \"https://insight.adsrvr.org/track/up\", dynParam);';\n    html += '}';\n    html += '});';\n\n    html+= '</script>';\n\n    self.createIframeWithContent(tag.id, html, function () {\n        self.log('Iframe added for pixel: ' + tag.id);\n    });\n}\n\nVendorService.prototype.theTradeDesk = function(tag, index) {\n\tvar self = this;\n\n\t\tvar src = '//insight.adsrvr.org/track/evnt/?adv=' + tag.advertiserId + '&ct=' + tag.contentId + '&fmt=3';\n\n\t\tif ( self.getValue('transaction.transactionID') ) {\n\t\t\tsrc = '//insight.adsrvr.org/track/conv/?adv=' + tag.advertiserId + '&ct=' + tag.contentId + '&fmt=3';\n\t\t\tsrc = src + '&v=' + self.getValue('transaction.total.basePrice') + '&vf=' + self.getValue('transaction.total.currency') + '&orderid=' + self.getValue('transaction.transactionID');\n\t\t}\n\n\t\tif ( typeof tag.customVariables !== 'undefined' ) {\n\t\t\tvar u = tag.customVariables;\n\t\t\tfor ( var j in u ) {\n\t\t\t\tif ( u.hasOwnProperty(j) ) {\n\t\t\t\t\tsrc += '&' + j + '=' + self.getValue(u[ j ], self.config.data);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tself.createElem('img', src, tag.id);\n};\nVendorService.prototype.tiktok = function (tag, index) {\n    var self = this;\n\n    if (isPixelIdValid(tag)) {\n        var html = self.generateTiktokHtmlScriptTag(tag);\n        self.createIframeWithContent(tag.id, html, function () {\n            self.log('Iframe added for pixel: ' + tag.id);\n        });\n    } else {\n        self.log('Invalid TikTok ID: ' + tag.pixelId);\n    }\n};\n\nvar isPixelIdValid =  function(tag) {\n    return !!tag.pixelId;\n}\n\nVendorService.prototype.twitterUniversal = function (tag, index) {\n    var self = this;\n    \n    !function (e, t, n, s, u, a) {\n        e.twq || (s = e.twq = function () {\n            s.exe ? s.exe.apply(s, arguments) : s.queue.push(arguments);\n        }, s.version = '1.1', s.queue = [], u = t.createElement(n), u.async = !0, u.src = '//static.ads-twitter.com/uwt.js',\n            a = t.getElementsByTagName(n)[0], a.parentNode.insertBefore(u, a))\n    }(window, document, 'script');\n\n\n    twq('init', tag.pid);\n\n    if ( self.getValue('transaction.transactionID') ) {\n        twq('track', 'Purchase',\n            //Note, all values sent as strings in single quotes)\n            {\n                value:        self.getValue('transaction.total.basePrice').toString(),\n                currency:     self.getValue('transaction.total.currency'),\n                order_id:     self.getValue('transaction.transactionID'),\n                content_type: 'tickets',\n                content_ids:  [self.getValue('page.attributes.eventID')],\n                content_name: self.getValue('page.attributes.eventName').replace(/\\x27/g, '\\\\\\x27'),\n                num_items:    self.getValue('transaction.attributes.ticketQuantity').toString()\n            }\n        );\n    } else {\n        twq('track', 'PageView');\n    }\n};\nVendorService.prototype.twitter = function (tag, index) {\n    var self = this;\n//****** Twitter ******//\n    (function (w, d, t, u, f, c) {\n        if(f){\n            c();\n            return;\n        }\n        var x = false,\n        p, s = d.createElement('script');\n        s.type = 'text/javascript';\n        s.src = u;\n        s.async = 1;\n        s.onload = s.onreadystatechange = function () {\n            if (!x && (!this.readyState || this.readyState === 'complete')) {\n                x = true;\n                self.twitterLoaded = true;\n                c();\n            }\n        };\n        p = d.getElementsByTagName(t)[0];\n        p.parentNode.insertBefore(s, p);\n    })(window, document, 'script', '//platform.twitter.com/oct.js', self.twitterLoaded, function () {\n        var conversion = {};\n        if (self.getValue('transaction.transactionID')) {\n            conversion.tw_sale_amount = self.getValue('transaction.total.basePrice');\n            conversion.tw_order_quantity =\n                self.getValue('transaction.attributes.ticketQuantity');\n        }\n        window.twttr.conversion.trackPid(tag.pid, conversion);\n\n    });\n\n//****** End Twitter ******//\n};\nVendorService.prototype.verizonMediaOauth = function (tag, index) {\n    var self = this;\n\n    //load the library in the iFrame\n    var html = '<script>';\n    html += '(function(w,d,t,r,u){w[u]=w[u]||[];w[u].push(\\n' +\n        '{projectId:\"' + tag.projectId + '\",properties:{pixelId:\"' + tag.pixelId + '\"}});\\n' +\n        'var s=d.createElement(t);s.src=r;s.async=true;s.onload=\\n' +\n        's.onreadystatechange=function(){var y,rs=this.readyState,c=w[u];\\n' +\n        'if(rs&&rs!=\"complete\"&&rs!=\"loaded\"){return}try{y=YAHOO.ywa.I13N.fireBeacon;\\n' +\n        'w[u]=[];w[u].push=function(p){y([p])};y(c)}catch(e){}};\\n' +\n        'var scr=d.getElementsByTagName(t)[0],par=scr.parentNode;par.insertBefore(s,scr)})(window,document,\"script\",\"https://s.yimg.com/wi/ytc.js\",\"dotq\"); ';\n\n    if ( self.getValue('transaction.transactionID', self.config.data) ) {\n        html += 'window.dotq = window.dotq || [];window.dotq.push({ \\'gv\\': ' + self.toFloat(self.getValue('transaction.total.basePrice') , 0) + ' });';\n    }\n\n    html+= '</script>';\n\n    self.createIframeWithContent(tag.id, html, function () {\n        self.log('Iframe added for pixel: ' + tag.id);\n    });\n}\n\n"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,"}